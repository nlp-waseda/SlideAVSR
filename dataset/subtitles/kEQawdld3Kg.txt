utt_0000 utt 0.18 7.79 -X HI EVERYONE, THIS IS KONSTANTINOS, AND TOGETHER WITH PARK, WE WILL BE TALKING TO YOU TODAY ABOUT THE END-TO-END OPTIMIZATION OF MACHINE LEARNING PREDICTION QUERIES.
utt_0002 utt 7.98 11.02 -X THIS IS WORK DONE AT MICROSOFT'S GRAY SYSTEMS LAB.
utt_0003 utt 11.37 16.24 -X AS MOST OF YOU ARE ALREADY FAMILIAR WITH, MACHINE LEARNING INVOLVES TWO MAIN PARTS:
utt_0004 utt 16.24 27.02 -X THE TRAINING PART WHERE WE'RE USING EXISTING DATA TO BUILD THE MODELS AND THE MODEL INFERENCE PART WHERE WE'RE USING THESE TRAINED MODELS IN ORDER TO PERFORM PREDICTIONS OVER NEW DATA.
utt_0006 utt 28.20 37.10 -X NOW, two YEARS AGO AT CIDR, WE LAID OUT OUR VISION FOR ENTERPRISE-GRADE MACHINE LEARNING AND IDENTIFIED VARIOUS CHALLENGES ACROSS THE BOARD.
utt_0008 utt 37.13 41.81 -X IN THIS WORK SPECIFICALLY, WE WILL BE FOCUSING ON THE MODEL INFERENCE SIDE OF THINGS.
utt_0009 utt 42.22 45.39 -X TO MAKE THINGS A BIT MORE CONCRETE, LET'S CONSIDER THE FOLLOWING SCENARIO.
utt_0010 utt 45.39 54.00 -X LET'S SAY WE'RE A HOSPITAL, AND EVERY MORNING WE WANT TO FIND THE PATIENTS WITH ASTHMA WHO ARE AT HIGH RISK OF DEVELOPING SOME COVID nineteen COMPLICATION.
utt_0012 utt 54.57 59.31 -X IN ORDER TO RUN THIS QUERY, WE'RE GONNA BE USING THIS MODEL THAT HAS BEEN TRAINED OVER
utt_0013 utt 61.36 67.83 -X DATA THROUGHOUT THE COUNTRY TO FIND THE RISK OF A PATIENT FOR A COVID nineteen COMPLICATION,
utt_0014 utt 68.69 74.35 -X AND WE WILL EMBED THIS QUERY IN A BIGGER SQL QUERY THAT LOOKS AS FOLLOWS.
utt_0015 utt 74.35 78.80 -X THE UPPER PART OF THE QUERY IDENTIFIES THE DATA THAT WILL BE USED FOR INFERENCE.
utt_0016 utt 78.80 83.63 -X SO YOU CAN SEE THERE WE HAVE THIS three WAY JOIN WITH THE PATIENT INFORMATION AND VARIOUS TESTS
utt_0017 utt 83.79 85.07 -X FROM THE PATIENTS.
utt_0018 utt 85.90 91.44 -X THEN, IN THE SECOND PART OF THE SQL QUERY WE HAVE THIS PREDICT STATEMENT THAT USES THIS
utt_0019 utt 91.89 96.59 -X TRAINED MODEL OVER THE INFERENCE DATA TO DO THE PREDICTIONS.
utt_0020 utt 96.59 102.19 -X AND THEN ON TOP OF THAT APPLIES VARIOUS FILTERS FOR FOR ASTHMA AND THE RISK OF COVID.
utt_0021 utt 103.15 106.16 -X DON'T WORRY TOO MUCH ABOUT THE SPECIFIC SYNTAX.
utt_0022 utt 106.16 118.00 -X THE POINT IS THAT WE'RE USING SQL HERE BECAUSE IT'S PROMINENT IN THE ENTERPRISE AND SIMILAR OFFERINGS FROM GOOGLE AND AMAZON ARE USING A SIMILAR SYNTAX AS THE ONE WE FOLLOW IN OUR ENGINES.
utt_0025 utt 119.34 125.88 -X NOW, THE QUESTION WE WANT TO ANSWER IN THIS WORK IS: HOW CAN WE OPTIMIZE SUCH QUERIES HOLISTICALLY?
utt_0027 utt 125.88 128.79 -X SO NOT JUST OPTIMIZE THE DATA PART OR THE ML PART.
utt_0028 utt 128.79 130.68 -X BUT LOOK AT THE QUERY AS A WHOLE.
utt_0029 utt 130.77 136.34 -X AND AS YOU WILL SEE THROUGHOUT THE TALK, WE MANAGED TO HAVE SOME VERY CONSIDERABLE SPEEDUPS
utt_0030 utt 140.14 144.92 -X BY DOING OUR OPTIMIZATIONS, BOTH BOTH ON TOP OF SPARK AND SQL SERVER WITH UP TO three hundred and thirty TIMES
utt_0031 utt 147.54 155.12 -X FASTER QUERIES, AND ALSO CONSIDERABLE SPEEDUPS OVER GPUS, AND ORDERS OF MAGNITUDE IMPROVEMENTS OVER STATE OF THE ARTS.
utt_0033 utt 157.14 164.53 -X NOW, TO MOTIVATE A BIT SOME OF THE SPECIFICS OF OUR WORK, FIRST OF ALL, WE FOCUS ON INFERENCE HERE.
utt_0035 utt 164.53 167.92 -X THE REASON IS THAT THE INFERENCE DRIVES THE COST OF MACHINE LEARNING IN THE ENTERPRISE.
utt_0036 utt 167.95 176.31 -X YES, YOU ARE ALL AWARE OF A HUGE CLUSTERS WITH THE TENS OF THOUSANDS OF GPUS THAT ARE USED TO TRAIN MODELS.
utt_0038 utt 176.31 183.09 -X BUT THE POINT IS THAT THESE MODELS ARE TRAINED ONCE, BUT THEN ARE USED MILLIONS AND MILLIONS OF TIMES TO DO PREDICTIONS.
utt_0040 utt 183.09 190.96 -X AND ACTUALLY THE INDUSTRY IS GOING TOWARDS EVEN PRE-TRAINED MODELS THAT ARE HOSTED IN THE CLOUD AND CAN BE USED BY ANYONE.
utt_0042 utt 192.43 198.85 -X SO AS PER OUR ESTIMATES, MORE THAN eighty% OF THE COST IN THE ENTERPRISE IN VARIOUS COMPANIES
utt_0043 utt 198.99 205.75 -X GOES TOWARDS MACHINE LEARNING INFERENCE, AND EVEN UP TO ninety% OF THE COST IS DEDICATED TO THAT.
utt_0045 utt 207.02 210.93 -X MOREOVER, BATCH INFERENCE IS VERY IMPORTANT.
utt_0046 utt 210.93 215.00 -X THIS IS AS OPPOSED TO LIVE INFERENCE THAT CARES ABOUT MILLISECOND LATENCIES.
utt_0047 utt 215.00 221.21 -X HERE WE CAN DO INFERENCE AT REGULAR INTERVALS, AND IN one hundred and thirty CUSTOMER ENGAGEMENTS WE FOUND THAT
utt_0048 utt 222.93 227.19 -X ACTUALLY ninety-one% OF THE USE CASES WERE BATCH USE CASES.
utt_0049 utt 227.19 233.75 -X AND ANOTHER six% OF THEM COULD BE COVERED BY DOING BATCH AT AT SHORT INTERVALS.
utt_0050 utt 234.29 240.05 -X THE THIRD POINT IS THAT WE'RE FOCUSING ON PREDICTION QUERIES THAT INVOLVE TRADITIONAL MACHINE LEARNING MODELS.
utt_0052 utt 240.05 247.70 -X THAT IS, YOU'RE LINEAR AND LOGISTIC REGRESSION, TREE MODELS, OR DECISION TREE, RANDOM FORESTS,
utt_0053 utt 247.70 252.53 -X FEATURIZATION OPERATORS, AND SO ON, BECAUSE THOSE ARE THE MOST WIDELY USED OVER STRUCTURED
utt_0054 utt 252.98 253.69 -X DATA.
utt_0055 utt 253.69 263.64 -X AND, WE HAVE BACKED THIS OBSERVATION BY VARIOUS KAGGEL SURVEYS, AS WELL AS A BIG ANALYSIS OF MORE THAN ten MILLION GITHUB NOTEBOOKS THAT ARE PUBLICLY AVAILABLE.
utt_0057 utt 266.71 276.02 -X SOME MORE THOUGHTS: WE TURNED TO THE TRAIN PIPELINES, AND WE WANTED TO SEE HOW COMPLEX THEY ARE TO SEE WHETHER IT'S WORTH OPTIMIZING, AND IN WHICH WAYS.
utt_0059 utt 276.24 282.01 -X SO WE ANALYZED MORE THAN five hundred SCIKIT-LEARN PIPELINES OVER OPENML DATASETS.
utt_0060 utt 283.22 290.04 -X HERE I GIVE VARIOUS FEATURES FROM OUR ANALYSIS, BUT I WANT YOU TO FOCUS ON SOME KEY TAKEAWAYS.
utt_0061 utt 290.04 298.01 -X FIRST OF ALL IT'S NOT POSSIBLE TO MANUALLY OPTIMIZE THESE QUERIES, BECAUSE THE TRAINED MODELS INVOLVED ARE REALLY COMPLEX.
utt_0063 utt 298.01 306.36 -X THEY INVOLVE ON AVERAGE MORE THAN one hundred and twenty OPERATORS, AND SOME CAN HAVE EVEN MORE THAN three,five hundred OPERATORS.
utt_0064 utt 306.58 314.17 -X SECOND, WE CANNOT HAVE A ONE SIZE FITS ALL OPTIMIZATION, BECAUSE THESE MODELS VARY WIDELY.
utt_0065 utt 314.17 322.49 -X SO WE CAN HAVE SOME MODELS THAT HAVE ON AVERAGE seventy-seven INPUT FEATURES, BUT THERE ARE MODELS THAT HAVE MORE THAN fifty MILLION INPUT FEATURES.
utt_0067 utt 322.49 331.38 -X SO ONE COULD THINK THAT WE COULD TRANSLATE EVERYTHING TO SQL, BUT WITH THIS MANY INPUT FEATURES NO REASONABLE SQL QUERY COULD BE EFFICIENT.
utt_0069 utt 332.05 334.94 -X AND THIRD, WE IDENTIFIED VARIOUS UNTAPPED OPPORTUNITIES.
utt_0070 utt 334.94 347.35 -X FOR EXAMPLE WE SAW THAT ALMOST HALF OF THE FEATURES THAT ARE USED IN THESE MODELS REMAIN UNUSED DURING INFERENCE, AND THIS IS BECAUSE OF THE WAY TRAINING HAPPENS AS WE IDENTIFY MORE IN OUR PAPER.
utt_0073 utt 348.60 357.18 -X SO LET'S SEE HOW OUR SYSTEM RAVEN, OUR OPTIMIZER FOR PREDICTION QUERIES IN AZURE DATA LOOKS LIKE FROM ABOVE.
utt_0075 utt 359.51 363.77 -X SO WE HAVE AS INPUT OUR PREDICTION QUERIES THAT INVOLVE DATA AND MACHINE LEARNING OPERATORS.
utt_0076 utt 363.77 366.01 -X WE'RE GONNA EXECUTE THEM ON TOP OF OUR ENGINES.
utt_0077 utt 366.01 370.33 -X I'M NOT GONNA GIVE YOU MORE SPECIFIC DETAILS ABOUT THE EXECUTION.
utt_0078 utt 370.33 375.64 -X BUT ESSENTIALLY KEEP IN MIND THAT WE HAVE PUT IN A LOT OF EFFORT IN ORDER TO ENABLE
utt_0079 utt 377.01 385.53 -X OUR MUSING LEARNING RUNTIMES TO BE COLLOCATED WITH OUR DATA ENGINES, NAMELY SPARK AND SQL SERVER.
utt_0081 utt 386.13 389.47 -X BUT THE MAIN FOCUS HERE IS ON OPTIMIZATION.
utt_0082 utt 389.47 396.83 -X SO THE MAIN IDEA IS THAT WE USE A UNIFIED INTERMEDIATE PRESENTATION TO REPRESENT BOTH
utt_0083 utt 397.01 400.73 -X THE DATA AND THE MACHINE LEARNING OPERATIONS IN THE SAME STRUCTURE.
utt_0084 utt 401.21 407.26 -X WE GIVE THAT AS INPUT TO OUR OPTIMIZER AND THEN WE OPTIMIZE THE PLAN AS A WHOLE.
utt_0085 utt 407.26 411.23 -X WE SPIT OUT AN OPTIMIZED INTERMEDIATE REPRESENTATION, WHICH WE ARE THEN GOING TO EXECUTE.
utt_0086 utt 411.29 418.52 -X PARK IS GONNA TALK IN A MINUTE ABOUT THE TYPES OF OPTIMIZATIONS THAT RAVEN ENABLES, NAMELY,
utt_0087 utt 418.52 420.99 -X LOGICAL AND LOGICAL-TO-PHYSICAL OPTIMIZATIONS.
utt_0088 utt 420.99 424.70 -X BUT LET ME VERY BRIEFLY TALK ABOUT THE UNIFIED IR.
utt_0089 utt 425.65 431.55 -X THE IR OF THE QUERY WE DESCRIBED IN THE BEGINNING OF THE TALK LOOKS AS FOLLOWS: AS YOU CAN SEE,
utt_0090 utt 431.55 437.21 -X IT INCLUDES VARIOUS RELATIONAL ALGEBRA OPERATIONS, BUT ALSO IT HAS MACHINE LEARNING OPERATORS.
utt_0091 utt 437.21 447.83 -X SO WE HAVE RELATIONAL ALGEBRA, WE HAVE LINEAR ALGEBRA, WE HAVE SOME OTHER MACHINE LEARNING OPERATORS THAT CANNOT BE EXPRESSED USING LINEAR ALGEBRA AS WELL AS VARIOUS DATA FEATURIZERS.
utt_0093 utt 447.83 450.59 -X YOU CAN FIND MORE DETAILS IN THE PAPER ABOUT OUR IR.
utt_0094 utt 450.71 455.32 -X SOME IMPORTANT DESIGN DECISIONS, THOUGH, TO KEEP IN MIND, IN ORDER TO MAKE OUR IR AND
utt_0095 utt 455.77 469.21 -X OUR SYSTEM AS A WHOLE APPLICABLE TO VARIOUS ENTERPRISE SETTINGS IS THAT WE STARTED THE IR FROM A MACHINE LEARNING IR, ONNX, WHICH IS OPEN-SOURCE AND PUBLICLY AVAILABLE, AND WE ADDED DATA OPERATIONS ON TOP OF IT.
utt_0098 utt 469.40 478.49 -X THE REASON WE FOLLOWED THIS RATHER THAN THE OTHER WAY AROUND IS BECAUSE THERE ARE WAY MORE MACHINE LEARNING OPERATORS THAN RELATIONAL ALGEBRA OPERATORS.
utt_0100 utt 478.49 482.56 -X SO IT WAS A MUCH MORE FEASIBLE DECISION TO DO IT THIS WAY.
utt_0101 utt 484.98 495.48 -X THANK YOU, KONSTANTINOS, NEXT I'LL BRIEFLY GO OVER HOW RAVEN WORKS WITH OUR RUNNING EXAMPLE.
utt_0102 utt 495.48 504.54 -X HERE IS AN EXAMPLE OF PREDICTION QUERY THAT IS TO FIND ASTHMA PATIENTS WHO ARE LIKELY IN THE HIGH-RISK COVID nineteen GROUP.
utt_0104 utt 505.56 509.95 -X GIVEN THE UNIFIED IR, INCLUDING BOTH DATA AND ML PARTS.
utt_0105 utt 509.95 512.51 -X RAVEN GOES THROUGH two MAJOR STEPS.
utt_0106 utt 513.69 522.91 -X FIRST STEP IS TO APPLY OUR NOVEL LOGICAL OPTIMIZATIONS, AND THE SECOND STEP IS CALLED LOGICAL TO PHYSICAL RUNTIME SELECTION.
utt_0108 utt 522.91 533.92 -X NOW LET ME DOUBLE CLICK THE FIRST LOGICAL COMMUNICATION STEP IN THIS LOGICAL ACTIVITY AND STEP WE APPLY A SET OF CROSS OBSERVATIONS BY PASSING INFORMATION ACROSS DATA PROCESSING,
utt_0110 utt 533.92 534.97 -X PART AND ENTERPRISE.
utt_0111 utt 536.82 541.12 -X THE FIRST CROSS OPTIMIZATION IS CALLED PREDICATE BASED MODEL PRUNING.
utt_0112 utt 541.82 546.24 -X AS YOU CAN SEE IN THIS EXAMPLE THERE IS A PREDICATE TELLS.
utt_0113 utt 546.24 548.25 -X THAT PATIENTS HAVE ASTHMA.
utt_0114 utt 548.67 551.97 -X WE CAN PULL THIS INFORMATION ALL THE WAY UP TO ML.
utt_0115 utt 551.97 556.09 -X TREE MODEL AND PRUNE THE TREE BRANCHES BASED ON THE PREDICATE.
utt_0116 utt 556.76 560.73 -X ANOTHER CROSS OPTIMIZATION IS MODEL PRODUCTION PUSH DOWN.
utt_0117 utt 560.95 565.92 -X THIS TIME WE PASS THE INFORMATION FROM ML MODEL TO DATA PART.
utt_0118 utt 566.27 573.02 -X IN THIS EXAMPLE, SINCE PATIENTS' BPM COLUMN IS NO LONGER NEEDED.
utt_0119 utt 573.02 577.02 -X THEREFORE WE CAN ADD AN ADDITIONAL PROJECTION IN THE DATA PART.
utt_0120 utt 578.49 583.17 -X ANOTHER LOGICAL OPTIMIZATION IS CALLED DATA INDUCED OPTIMIZATION.
utt_0121 utt 583.23 587.04 -X WHERE WE EXPLOIT STATISTICS OF THE UNDERLYING DATA.
utt_0122 utt 587.04 592.06 -X TO FURTHER SIMPLIFY THE QUERY PLAN BY ENABLING CROSS OPERATIONS.
utt_0123 utt 593.02 597.57 -X THESE LOGICAL OPTIMZATIONS ARE ALWAYS BENEFICIAL, AND THEREFORE
utt_0124 utt 598.27 600.16 -X THEY ARE APPLIED FIRST.
utt_0125 utt 600.63 607.23 -X THIS IS SIMILAR TO THE HEURISTIC OPTIMIZATIONS THAT ARE ALWAYS APPLIED FIRST BY RELATIONAL OPTIMIZERS.
utt_0127 utt 608.79 623.65 -X THE SECOND STEP IS CALLED LOGICAL TO PHYSICAL OPTIMIZATIONS WHICH AIM TO CONVERT A SET OF OPERATORS TO ANOTHER IN ORDER TO ALLOW MORE EFFICIENT ENGINES AND HARDWARE TO BE USED FOR EXECUTING THOSE OPERATORS.
utt_0130 utt 624.25 628.83 -X RAVEN SUPPORTS two TYPES OF OPERATION TRANSFORMATIONS.
utt_0131 utt 629.82 633.44 -X ONE IS MLTOSQL TRANSFORMATION, WHERE WE CONVERT ML
utt_0132 utt 633.47 636.42 -X OPERATORS TO EQUIVALENT RELATION ONES.
utt_0133 utt 636.70 651.30 -X THE MAIN BENEFIT OF THIS CONVERSION IS TO REDUCE OR COMPLETELY AVOID INVOKING THE ML RUNTIME, THEREBY AVOIDING INITIALIZATION COST AND DATA CONVERSION BETWEEN THE RELATIONAL AND ML ENGINES.
utt_0136 utt 652.51 662.18 -X YOU CAN ALSO ENABLE MORE EXTENSIVE RELATIONAL OPTIMIZATIONS IN THE DBMS, SUCH AS PUSHING ML COMPUTATIONS BELOW JOINS AND AGGREGATES.
utt_0138 utt 662.78 676.53 -X THE OTHER TRANSFORMATION IS MLTODNN WHERE WE TRANSLATE TRADITIONAL ML OPERATORS TO EQUIVALENT DNNS THAT CAN BE EXECUTED ON HIGHLY EFFICIENT DNN ENGINES LIKE PYTORCH, TENSORFLOW, AND
utt_0140 utt 676.53 677.79 -X ONNX RUNTIME.
utt_0141 utt 677.82 684.90 -X FOR THIS TRANSFORMATION, RAVEN LEVERAGES RECENT WORK ON HUMMINGBIRD PROJECT FROM MICROSOFT.
utt_0142 utt 685.18 690.88 -X THIS IS VERY IMPORTANT PERFORMANCE-WISE, AS DNN ENGINES SUPPORT OUT OF THE BOX.
utt_0143 utt 690.88 696.26 -X HARDWARE ACCELERATION THROUGH GPUS AND FPGS.
utt_0144 utt 696.26 702.98 -X MOST IMPORTANTLY, WE OBSERVED THAT THIS LOGICAL TO PHYSICAL OBSERVATIONS ARE NOT ALWAYS BENEFICIAL.
utt_0145 utt 703.39 707.33 -X BLINDLY APPLIED THEM CAN LEAD UP TO AN ORDER OF MAGNITUDE.
utt_0146 utt 707.33 708.03 -X SLOWDOWNS.
utt_0147 utt 708.03 718.21 -X HENCE RAVEN INTRODUCES OPTIMIZATION STRATEGIES TO PICK THE RULES THAT WOULD LEAD TO THE BEST PERFORMANCE FOR EACH QUERY ON A GIVEN HARDWARE SETUP.
utt_0149 utt 720.16 727.87 -X INSTEAD OF RELYING ON HARDCODED HEURISTICS, RAVEN EMPLOYS DATA-DRIVEN, INSTANCE-OPTIMIZED STRATEGIES.
utt_0151 utt 728.00 733.70 -X WE HAVE THESE three RULE-BASED, REGRESSION-BASED, CLASSIFICATION-BASED STRATEGIES.
utt_0152 utt 733.95 738.15 -X YOU CAN FIND MORE DETAILS ABOUT EACH OF THESE STRATEGIES IN THE PAPER.
utt_0153 utt 738.15 745.41 -X BUT IN SUMMARY, CLASSIFICATION-BASED APPROACH PERFORMED BEST IN PRACTICE.
utt_0154 utt 746.62 756.48 -X WE IMPLEMENTED RAVEN AS AN EXTENSION TO APACHE SPARK AS DESCRIBED IN THIS PICTURE WITH THE MAIN RAVEN COMPONENTS IN GRAY COLOR.
utt_0156 utt 757.15 771.97 -X IN PARTICULAR, WE INTRODUCED THE PREDICT STATEMENTS TO ALLOW SPARKSQL USERS TO EXPRESS PREDICTION QUERIES, AND WE ADDED A NEW RULE TO THE CATALYST OPTIMIZER THAT INTERNALLY INVOKES OUR RAVEN
utt_0158 utt 771.97 776.13 -X OPTIMIZATION LASTLY, WE DEFINED A PYTHON UDF.
utt_0159 utt 776.13 780.32 -X THAT ALLOWS INVOKING EXTERNAL ML RUNTIMES.
utt_0160 utt 781.05 788.32 -X NOW LET ME SHARE SOME OF OUR PERFORMANCE NUMBERS IN AZURE HDI SPARK CLUSTER.
utt_0161 utt 788.32 793.60 -X THIS GRAPH SHOWS THE END TO END PREDICTION QUERY TIME FOR two POPULAR DATA SETS FOR DATA
utt_0162 utt 795.23 796.32 -X SCIENCE TASKS.
utt_0163 utt 796.48 799.97 -X ONE IS CREDIT CARD AND THE OTHER ONE IS HOSPITAL DATA SET.
utt_0164 utt 800.77 807.62 -X IN THIS GRAPH THE RED COLOR IS RAVEN, AND OTHER BASELINE RUNTIMES ARE IN DIFFERENT COLORS.
utt_0166 utt 808.03 817.41 -X SPARKML IS IN PURPLE, SCIKIT-LEARN IS IN BLUE AND RAVEN WITHOUT ANY OPTIMIZATIONS USING ONNX RUNTIME IS IN GREEN.
utt_0168 utt 817.41 823.27 -X WE USED three DIFFERENT ML MODELS SUCH AS LOGISTIC REGRESSION, DECISION TREE, AND GRADIENT BOOST MODELS.
utt_0170 utt 823.94 831.08 -X AS YOU CAN SEE, RAVEN CROSS OPTIMIZATIONS AND TRANSFORMATIONS CAN GIVE two ORDERS OF MAGNITUDE
utt_0171 utt 831.30 836.74 -X PERFORMANCE IMPROVEMENTS OVER OTHER STATE OF THE ART BASELINES.
utt_0173 utt 836.90 844.36 -X THE NEXT GRAPH HIGHLIGHTS THAT USING GPUS CAN SIGNIFICANTLY DECREASE INFERENCE TIME,
utt_0174 utt 844.36 857.60 -X ESPECIALLY FOR COMPLEX MODELS, AS SHOWN IN THIS GRAPH FOR GRADIENT BOOST MODELS, WITH A LARGE NUMBER OF ESTIMATORS AND DEEPER TREES, RAVEN'S MLTODNN TRANSFORMATION
utt_0176 utt 857.60 865.64 -X WITH GPU CAN GIVE eightX SPEED UP COMPARED TO THE ORIGINAL MODEL WITHOUT TRANSFORMATION.
utt_0177 utt 866.66 879.83 -X TO CONCLUDE, RAVEN IS A PRODUCTION READY SYSTEM THAT IS ABLE TO NOT ONLY PUSH INFORMATION FROM RELATIONAL OPERATORS INTO ML MODELS AND VICE VERSA TO HOLISTICALLY OPTIMIZE PREDICTION
utt_0179 utt 879.83 884.23 -X QUERIES, BUT IT CAN ALSO PICK THE RIGHT TARGET RUNTIME.
utt_0180 utt 884.64 895.75 -X NOVEL RAVEN OPTIMIZER WITH LOGICAL OPTIMIZATIONS AND LOGICAL TO PHYSICAL RUNTIME SELECTION CAN IMPROVE THE PERFORMANCE OF PREDICTION QUERY BY MULTIPLE ORDERS OF MAGNITUDE.
utt_0183 utt 896.90 904.77 -X RAVEN'S EXTENSIBLE ARCHITECTURE ENABLES US TO EASILY ADD NEW OPTIMIZATIONS AS PART OF OUR FUTURE WORK.
