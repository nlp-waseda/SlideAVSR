utt_0000 utt 1.23 6.77 -X IN THIS WORK WE DEFINE AND SOLVE SCENE DE-OCCLUSION PROBLEM IN A SELF-SUPERVISED MANNER
utt_0002 utt 8.43 17.26 -X WHAT WE HAVE IS MERELY A TYPICAL INSTANCE SEGMENTATION DATASET INCLUDING RGB IMAGES, MODAL MASKS AND CATEGORY LABELS.
utt_0005 utt 17.64 23.44 -X THE MODAL MASKS ARE INSTANCE SEGMENTATION MASKS THAT REPRESENT VISIBLE PARTS OF OBJECTS.
utt_0007 utt 23.53 27.86 -X WE HAVE NO ANNOTATION OF OCCLUSION ORDERING OR AMODAL MASKS.
utt_0009 utt 30.03 36.82 -X SCENE DE-OCCLUSION DECOMPOSES A REAL WORLD SCENE INTO INTACT OBJECTS WITH INVISIBLE PARTS AND THE BACKGROUND
utt_0012 utt 37.13 40.18 -X THE OBJECTS ARE ORGANIZED BY AN ORDERING GRAPH
utt_0013 utt 40.33 43.76 -X THE EDGES OF THE GRAPH INDICATES THE OCCLUSION DIRECTIONS
utt_0015 utt 45.97 50.55 -X THE SCENE DE-OCCLUSION PROBLEM CAN BE BROKEN DOWN INTO THREE SUBTASKS.
utt_0017 utt 50.89 54.98 -X FIRST, WE RECOVER THE ORDERING BETWEEN OCCLUDING OBJECT PAIRS
utt_0019 utt 55.41 57.68 -X NEXT, WITH RECOVERED ORDERING
utt_0020 utt 57.71 60.21 -X WE OBTAIN THE OCCLUDERS OF AN OBJECT.
utt_0021 utt 60.62 63.87 -X IT FACILITATES US TO PERFORM AMODAL COMPLETION
utt_0022 utt 63.92 68.34 -X THAT IS PREDICTING THE INTACT MASK OF AN OBJECT GIVEN ITS OCCLUDERS.
utt_0024 utt 68.85 73.79 -X FINALLY, THE INTACT AMODAL MASK CONTAINS INVISIBLE REGIONS OF AN OBJECT
utt_0026 utt 73.93 79.28 -X WE FURTHER PERFORM CONTENT COMPLETION TO FILL IN THE INVISIBLE REGIONS WITH RGB CONTENTS.
utt_0028 utt 81.20 85.97 -X TO QUICKLY CATCH UP WITH THE BASIC IDEA, LET'S START FROM AMODAL COMPLETION.
utt_0030 utt 86.70 92.19 -X AMODAL COMPLETION AIMS AT PREDICTING THE INTACT MASK OF AN OBJECT GIVEN ITS OCCLUDERS
utt_0032 utt 92.72 96.48 -X LET'S HAVE A LOOK AT THE BLUE OBJECTS AND THEIR GRAY OCCLUDERS
utt_0034 utt 96.85 100.02 -X COULD YOU TELL THE ORIGINAL SHAPE OF THE BLUE OBJECTS?
utt_0035 utt 100.02 102.42 -X IT IS NOT A DIFFICULT TASK FOR HUMANS.
utt_0036 utt 102.83 110.52 -X FOR MACHINE, GIVEN GROUND TRUTH AMODAL MASKS AS SUPERVISION WE CAN TRAIN A NETWORK TO PERFORM FULL COMPLETION OF OBJECTS,
utt_0040 utt 110.52 113.24 -X THAT IS, COMPLETING OBJECT MASKS AT ONCE.
utt_0041 utt 113.84 116.98 -X HOWEVER, WHAT IF WE DON'T HAVE THE GROUND TRUTH?
utt_0042 utt 120.27 123.41 -X HERE WE INTRODUCE PARTIAL COMPLETION.
utt_0043 utt 123.41 127.99 -X WE SHOW THAT FULL COMPLETION IS EQUIVALENT TO A SEQUENCE OF PARTIAL COMPLETIONS
utt_0045 utt 128.43 130.90 -X WE DENOTE THE MODAL MASK AS Mzero.
utt_0046 utt 131.60 135.51 -X AT FIRST WE CONSIDER ONE OF THE OCCLUDERS, THE GRAY CIRCLE,
utt_0047 utt 135.51 140.69 -X AND PERFORM PARTIAL COMPLETION TO COMPLETE THE OCCLUDED PART BY THIS OCCLUDED TO OBTAIN Mone.
utt_0049 utt 141.78 145.49 -X NEXT, WE CONSIDER THE OTHER OCCLUDER, THE GRAY RECTANGLE,
utt_0050 utt 145.49 148.28 -X AND PERFORM PARTIAL COMPLETION AGAIN TO OBTAIN Mtwo.
utt_0051 utt 149.04 151.64 -X BY CONSIDERING THE OCCLUDERS ONE-BY-ONE,
utt_0052 utt 151.64 155.96 -X WE BREAK DOWN FULL COMPLETION INTO A SEQUENCE OF PARTIAL COMPLETIONS.
utt_0054 utt 157.58 162.07 -X HOWEVER WE STILL HAVE NO GROUND TRUTH TO TRAIN THE PARTIAL COMPLETION PROCESS.
utt_0056 utt 162.77 165.04 -X Mone AND Mtwo ARE STILL UNAVAILABLE
utt_0057 utt 165.30 168.79 -X WHAT WE HAVE ARE MERELY Mzero AND ITS OCCLUDERS.
utt_0058 utt 169.43 171.54 -X NEXT, WE PRESENT OUR KEY IDEA
utt_0059 utt 171.86 173.65 -X WE FURTHER TRIM DOWN Mzero
utt_0060 utt 173.68 176.31 -X WITH A SURROGATE OBJECT TO OBTAIN Mminus one.
utt_0061 utt 176.34 181.69 -X THE SURROGATE OBJECT IS A RANDOM MODAL MASK CHOSEN FROM THE DATASET.
utt_0063 utt 182.23 184.49 -X THEN WE PERFORM PARTIAL COMPLETION
utt_0064 utt 185.07 186.52 -X ON Mminus one TO RECOVER Mzero.
utt_0065 utt 187.25 189.14 -X THIS PROCESS IS TRAINABLE
utt_0066 utt 189.49 196.44 -X THE TRIMMING-DOWN-AND-RECOVERING STRATEGY IS THE FOUNDATION OF OUR SELF-SUPERVISED SOLUTION OF SCENE DE-OCCLUSION.
utt_0068 utt 197.36 199.73 -X LET'S SUMMARIZE WHAT WE'VE DONE SO FAR.
utt_0069 utt 200.18 209.11 -X WE PROPOSE PARTIAL COMPLETION MECHANISM TO COMPLETE PART OF AN OBJECT OCCLUDED BY A GIVEN OCCLUDER WITHOUT USING AMODAL ANNOTATIONS.
utt_0072 utt 209.55 212.25 -X NEXT, WE NATURALLY RAISE THE QUESTION,
utt_0073 utt 212.37 214.93 -X WHO ARE THE OCCLUDERS OF AN OBJECT.
utt_0074 utt 215.38 224.85 -X AS SHOWN IN THIS PICTURE, WITHOUT ORDERING RECOVERY WE CANNOT TELL, AMONG four GREY OBJECTS WHO ARE THE OCCLUDERS OF THE BLUE OBJECT.
utt_0077 utt 225.78 232.02 -X TO SOLVE ORDERING RECOVERY, WE NEED TO INTRODUCE THE REGULARIZATION FOR PARTIAL COMPLETION.
utt_0079 utt 232.02 235.26 -X THIS FIGURE SHOWS THE ORIGINAL PARTIAL COMPLETION PROCESS.
utt_0081 utt 235.41 240.25 -X IN SUCH CASE, PARTIAL COMPLETION ALWAYS ENCOURAGES INCREMENT OF PIXELS.
utt_0083 utt 240.95 243.19 -X NEXT, WE INTRODUCE THE OTHER CASE.
utt_0084 utt 243.54 248.18 -X IN THIS CASE, WE PUT THE SURROGATE OBJECT BELOW THE BLUE OBJECT
utt_0086 utt 248.31 254.17 -X AND WE ENCOURAGE THE PARTIAL COMPLETION PROCESS TO RETAIN THE ORIGINAL MASK OF THE BLUE OBJECT.
utt_0088 utt 254.64 259.27 -X THE PARTIAL COMPLETION PROCESS IS TRAINED WITH CASE one AND CASE two RANDOMLY
utt_0090 utt 259.76 264.04 -X IN THIS WAY THE BEHAVIOR OF PARTIAL COMPLETION GOES AS FOLLOWS
utt_0092 utt 264.79 272.34 -X IF THE TARGET OBJECT LOOKS LIKE TO BE OCCLUDED BY THE SURROGATE OBJECT AS IN CASE one, THEN COMPLETE IT
utt_0094 utt 272.72 275.45 -X IF NOT, WE KEEP IT UNMODIFIED.
utt_0095 utt 276.15 280.12 -X NOW WE OBTAINED A REGULARIZED PARTIAL COMPLETION PROCESS.
utt_0097 utt 280.31 289.03 -X IT HAS SUCH PROPERTY, THAT IF THE TARGET OBJECT IS PARTIALLY COMPLETED BY PARTIAL COMPLETION WE KNOW IT IS OCCLUDED BY THE SURROGATE OBJECT
utt_0100 utt 289.27 292.57 -X OTHERWISE IT OCCLUDES THE SURROGATE OBJECT.
utt_0101 utt 294.10 300.89 -X PARTIAL COMPLETION IS IMPLEMENTED BY PARTIAL COMPLETION NETWORK-MASK, ABBREVIATED AS PCNET-M.
utt_0103 utt 301.53 306.68 -X GIVEN AN INSTANCE A, WE RANDOMLY CHOOSE ANOTHER INSTANCE B FROM THE DATASET.
utt_0105 utt 307.06 310.65 -X NOTE THAT WE ONLY HAVE MODAL MASKS FOR BOTH A AND B.
utt_0106 utt 310.65 316.54 -X FOR CASE one, WE PUT B ABOVE A AND TRAIN THE PCNET-M TO RECOVER A.
utt_0108 utt 316.98 319.90 -X FOR CASE two, WE PUT A ABOVE B
utt_0109 utt 319.96 322.52 -X AND TRAIN THE PCNET-M TO RETAIN A.
utt_0110 utt 323.03 325.24 -X THE PCNET-M IS A U-NET
utt_0111 utt 325.81 329.69 -X THE INPUTS RANDOMLY SWITCHES BETWEEN CASE one AND CASE two.
utt_0113 utt 331.22 337.05 -X HENCE, PCNET-M HAS TO DISCOVER CUES FROM THE INPUTS TO DISTINGUISH BETWEEN THE TWO CASES,
utt_0115 utt 337.05 341.21 -X AND DETERMINE WHETHER IT SHOULD PARTIALLY COMPLETE A OR RETAIN A.
utt_0117 utt 341.85 347.19 -X BESIDES, PCNET-M IS ALSO REQUIRED TO RECOVER THE OCCLUDED SHAPE CORRECTLY,
utt_0119 utt 347.32 349.95 -X IF IT DETERMINES THE SITUATION AS CASE one.
utt_0120 utt 351.83 358.94 -X NEXT, GIVEN A TRAINED PCNET-M WE SHOW HOW TO RECOVER THE ORDERING BETWEEN TWO NEIGHBORING OBJECTS.
utt_0123 utt 359.41 365.15 -X FOR EXAMPLE, IN THIS IMAGE, WE DENOTE THE DOUGHNUT AS Aone, AND THE COFFEE CUP AS Atwo.
utt_0125 utt 365.88 368.38 -X AT FIRST, AS SHOWN IN FIGURE (A)
utt_0126 utt 368.38 373.47 -X WE REGARD Aone AS THE TARGET OBJECT AND Atwo AS THE SURROGATE OCCLUDER.
utt_0128 utt 373.88 378.97 -X WE OBSERVE THAT PCNET-M KEEPS THE MASK OF Aone UNCHANGED.
utt_0130 utt 378.97 381.05 -X CONVERSELY, AS SHOWN IN FIGURE (B)
utt_0131 utt 381.05 384.51 -X WE MAKE Atwo BE THE TARGET OBJECT, AND Aone THE OCCLUDER.
utt_0132 utt 384.54 387.87 -X THEN PCNET-M INCREASES THE AREA OF Atwo.
utt_0133 utt 388.98 392.80 -X SINCE THE INCREMENTAL AREA OF Atwo IS LARGER THAN THAT OF Aone,
utt_0134 utt 393.05 395.58 -X IT IS CONCLUDED THAT Aone IS ABOVE Atwo.
utt_0135 utt 396.98 400.64 -X THIS SIMPLE STRATEGY ACHIEVES SURPRISINGLY HIGH ACCURACY.
utt_0136 utt 400.95 405.98 -X IN THIS WAY, WE COULD RECOVER THE PAIRWISE ORDERING BETWEEN ALL NEIGHBORING OBJECTS,
utt_0138 utt 405.98 408.35 -X RESULTING IN A DIRECTED GRAPH.
utt_0139 utt 409.05 413.87 -X WITH THE PREDICTED ORDERING OUR NEXT STEP IS AMODAL COMPLETION
utt_0141 utt 413.98 418.68 -X THAT IS PREDICTING THE AMODAL MASK OF EACH OBJECT GIVEN ITS OCCLUDERS.
utt_0143 utt 420.31 424.25 -X TO THIS END, WE PROPOSE ORDERING-GROUNDED AMODAL COMPLETION.
utt_0144 utt 424.66 430.21 -X NOW WE HAVE RECOVERED THE ORDERING AMONG OBJECTS TO CONSTRUCT A DIRECTED GRAPH.
utt_0146 utt 430.43 433.66 -X TAKING OBJECT three, THE DONUT AS AN EXAMPLE,
utt_0147 utt 433.75 438.30 -X WE SEARCH ALL ITS ANCESTORS NODES IN THE GRAPH AS IT'S TRUE OCCLUDERS,
utt_0149 utt 438.30 440.00 -X WHICH ARE OBJECT two AND four.
utt_0150 utt 440.89 445.21 -X RECALL THAT PARTIAL COMPLETION CONSIDERS THE OCCLUDERS ONE-BY-ONE,
utt_0152 utt 445.21 447.71 -X AND COMPLETE THE TARGET OBJECT STEP-BY-STEP.
utt_0153 utt 448.09 450.72 -X HOWEVER, WE FIND THAT THE TRAINED PCNET-M
utt_0154 utt 450.87 457.09 -X IS GENERALIZABLE TO USE THE UNION OF ALL OCCLUDERS TO COMPLETE THE TARGET OBJECT AT ONCE.
utt_0156 utt 457.79 464.41 -X HENCE, WE TAKE THE UNION OF MODAL MASKS OF OBJECT two AND four AS THE INPUT OCCLUDER MASK.
utt_0158 utt 464.41 469.69 -X GIVEN THESE INPUTS, THE PCNET-M PREDICTS THE AMODAL MASK OF OBJECT three.
utt_0160 utt 470.49 475.23 -X THE PROCESS IS ITERATED FOR ALL OBJECTS WHOSE INDEGREE IS LARGER THAN zero.
utt_0162 utt 475.96 479.90 -X SINCE THE COMPLETION OF EACH OBJECT IS INDEPENDENT OF EACH OTHER
utt_0163 utt 479.96 484.64 -X THE PROCESS DOES NOT NEED TO FOLLOW A CERTAIN ORDER.
utt_0164 utt 485.08 491.55 -X IN AMODAL COMPLETION, WE MENTIONED THAT WE NEED TO USE ALL ANCESTORS IN THE GRAPH AS THE OCCLUDERS.
utt_0166 utt 491.58 494.91 -X FOR EXAMPLE, IN THIS FIGURE, FOR OBJECT one
utt_0167 utt 495.45 499.81 -X ALL ANCESTORS IN THE GRAPH INCLUDE OBJECT two, three, AND four.
utt_0168 utt 500.51 503.86 -X BUT WHY NOT JUST USE THE FIRST-ORDER ANCESTORS
utt_0169 utt 504.03 507.04 -X SINCE HIGHER-ORDER ANCESTORS LIKE OBJECT three
utt_0170 utt 507.20 509.60 -X DO NOT DIRECTLY OCCLUDE OBJECT one.
utt_0171 utt 509.60 511.58 -X HERE IS THE ANSWER
utt_0172 utt 511.84 516.48 -X IF WE ONLY USE THE FIRST ORDER ANCESTORS THAT IS OBJECT two AND four
utt_0174 utt 516.80 524.13 -X THE COMPLETION IS LIMITED IN THE UNION OF MODAL MASKS OF OBJECT two AND four, THAT IS, THE GRAY REGION.
utt_0176 utt 524.38 530.34 -X HOWEVER, HIGHER-ORDER ANCESTORS MIGHT ALSO OCCUPY THE INVISIBLE REGION OF THE TARGET OBJECT.
utt_0178 utt 530.65 535.71 -X IN THIS CASE, PART OF OBJECT one IS INDIRECTLY OCCLUDED BY OBJECT three.
utt_0180 utt 536.60 541.82 -X USING ONLY FIRST-ORDER ANCESTORS RESULTS IN INCOMPLETE AMODAL COMPLETION.
utt_0182 utt 541.92 544.86 -X WHEN WE USE ALL ANCESTORS, OBJECT two, three, AND four
utt_0183 utt 545.82 549.79 -X WE CAN OBTAIN CORRECT AMODAL COMPLETION.
utt_0184 utt 550.88 552.67 -X WITH AMODAL COMPLETION,
utt_0185 utt 552.67 555.87 -X WE DELIMIT THE INVISIBLE REGION OF EACH OBJECT.
utt_0186 utt 556.06 559.97 -X THERE REMAINS ONE LAST TASK THAT IS CONTENT COMPLETION.
utt_0188 utt 560.38 565.76 -X CONTENT COMPLETION FILLS IN THE INVISIBLE REGIONS OF AN OBJECT WITH RGB CONTENTS.
utt_0190 utt 565.95 568.74 -X IT COMES WITH A VERY NATURAL QUESTION.
utt_0191 utt 569.02 572.23 -X IS IT THE SAME AS IMAGE INPAINTING?
utt_0192 utt 573.50 577.79 -X LET'S FIRST HAVE A LOOK AT HOW WE TRAIN THE CONTENT COMPLETION NETWORK PCNET-C.
utt_0194 utt 578.91 586.59 -X SIMILAR TO PCNET-M, IT PARTIALLY COMPLETES AN OBJECT GIVEN ITS OCCLUDERS, WHILE THIS TIME ON RGB CONTENTS.
utt_0196 utt 586.59 592.10 -X THE SURROGATE INCLUDER B IS RANDOMLY CHOSEN IN THE SAME WAY AS IN PCNET-M.
utt_0198 utt 592.51 600.39 -X THE INPUTS INCLUDE THE MODAL MASK OF A ERASED BY B AND THE IMAGE PATCH ERASED BY THE INTERSECTION OF A AND B.
utt_0200 utt 600.96 605.12 -X THE INTERSECTION OF A AND B INDICATES THE MISSING REGION TO FILL IN,
utt_0201 utt 606.40 610.11 -X AND A\B INDICATES WHICH OBJECT THE MISSING REGION BELONGS TO.
utt_0202 utt 611.17 614.40 -X THE PCNET-C IS TRAINED TO RECOVER THE ORIGINAL IMAGE.
utt_0203 utt 616.38 621.03 -X IN INFERENCE, NOW THAT WE HAVE THE AMODAL MASK OF AN OBJECT,
utt_0204 utt 621.03 626.50 -X WE TAKE THE INTERSECTION OF THE AMODAL MASK AND THE OCCLUDERS TO OBTAIN THE MISSING REGIONS.
utt_0206 utt 626.91 630.72 -X WE USE THE MISSING REGIONS TO ERASE THE IMAGE AS THE INPUT,
utt_0207 utt 630.72 635.94 -X AND ALSO FEED IN THE MODAL MASK TO INDICATE THE OBJECT THAT THE MISSING REGION BELONGS TO.
utt_0209 utt 636.45 640.36 -X THE PCNET-C FILLS IN THE MISSING REGIONS WITH RGB CONTENTS,
utt_0210 utt 640.45 645.09 -X AND THE OUTPUT IS MULTIPLIED WITH THE AMODAL MASK TO REMOVE THE BACKGROUND.
utt_0212 utt 645.47 650.05 -X IN THIS WAY, WE OBTAIN THE DECOMPOSED INTACT OBJECT.
utt_0213 utt 651.65 656.13 -X THE DIFFERENCE BETWEEN PCNET-C AND IMAGE INPAINTING LIES HERE.
utt_0214 utt 656.26 661.25 -X IMAGE INPAINTING DOES NOT REQUIRE THE MODAL MASK OF THE TARGET OBJECT AS INPUT.
utt_0216 utt 661.54 665.80 -X IT DOES NOT CARE ABOUT WHICH OBJECT THE MISSING REGION BELONGS TO.
utt_0217 utt 666.27 672.90 -X IF WE DIRECTLY APPLY IMAGE INPAINTING THE MISSING REGIONS WILL BE FILLED IN WITH THE CONTENT OF OTHER OBJECTS.
utt_0219 utt 672.90 676.10 -X FOR EXAMPLE, PART OF THE COFFEE CUP IN THIS CASE.
utt_0220 utt 676.93 682.76 -X THIS RESULT IS REASONABLE FOR IMAGE INPAINTING BUT NOT FOR CONTENT COMPLETION OF AN OBJECT.
utt_0222 utt 683.20 686.18 -X WHILE WITH THE MODAL MASK AS AN AUXILIARY INPUT
utt_0223 utt 686.30 689.86 -X CONTENT COMPLETION IS ABLE TO GENERATE CORRECT CONTENTS.
utt_0224 utt 692.58 696.52 -X UP TO NOW, THE SCENE DE-OCCLUSION PROBLEM IS WELL SOLVED
utt_0225 utt 696.58 700.42 -X EVEN WITHOUT MANUAL ANNOTATIONS OF ORDERING OR AMODAL MASKS.
utt_0226 utt 702.75 709.06 -X IN SUMMARY, WE PROPOSED A PARTIAL COMPLETION FRAMEWORK THAT IS TRAINED IN A SELF-SUPERVISE MANNER.
utt_0228 utt 709.06 711.05 -X WITH THE TRAINING PCNETS
utt_0229 utt 711.20 718.50 -X WE PROPOSE A PROGRESSIVE INFERENCE SCHEME FOR ORDERING RECOVERY, AMODAL COMPLETION, AND CONTENT COMPLETION.
utt_0231 utt 719.43 724.90 -X WE EVALUATE OUR METHOD FOR ORDERING RECOVERY AND AMODAL COMPLETION ON TWO DATASETS.
utt_0233 utt 725.15 729.00 -X WE ACHIEVE VERY CLOSE RESULTS TO SUPERVISED METHODS.
utt_0234 utt 731.17 737.61 -X OUR METHOD CAN BE USED TO CONVERT MODAL DATASETS LIKE COCO AND KITTI INTO AMODAL DATASETS.
utt_0236 utt 738.24 743.56 -X SPECIFICALLY, WE TRAIN THE PCNET-M ON THE TRAINING SET USING MODAL ANNOTATIONS,
utt_0238 utt 743.59 750.12 -X AND AGAIN APPLY IT ON THE TRAINING SET TO PERFORM AMODAL COMPLETION TO INFER PSEUDO AMODAL MASKS.
utt_0240 utt 750.91 758.90 -X SUCH SELF-SUPERVISED CONVERSION IS INTRINSICALLY DIFFERENT FROM TRAINING A SUPERVISED MODEL ON A SMALL LABELED AMODAL DATASET
utt_0243 utt 758.95 761.77 -X AND TESTING IT ON A LARGER MODAL DATASET,
utt_0244 utt 762.02 768.26 -X WHERE THE GENERALIZABILITY BETWEEN DIFFERENT DATASETS CAN BE AN ISSUE.
utt_0245 utt 768.26 774.31 -X TO EVALUATE THE QUALITY OF THE PSUEDO AMODAL ANNOTATIONS AND COMPARE THEM WITH MANUAL ANNOTATIONS,
utt_0247 utt 774.44 779.18 -X WE PERFORM COMPARISON EXPERIMENTS ON AMODAL INSTANT SEGMENTATION TASK.
utt_0249 utt 779.65 784.90 -X WE TRAIN MASK R-CNNS TO PREDICT AMODAL INSTANCE MASKS FROM IMAGES.
utt_0251 utt 785.35 790.98 -X THE EXPERIMENTS USE THE SAME FRAMEWORK AND HYPER-PARAMETERS FOR TRAINING AND TESTING.
utt_0253 utt 791.08 794.73 -X THE ONLY DIFFERENCE IS THE ANNOTATIONS DURING TRAINING.
utt_0254 utt 794.73 797.70 -X WITH THE PSEUDO ANNOTATIONS YIELDED BY OUR METHOD
utt_0255 utt 797.80 801.03 -X WE ACHIEVED THE SAME PERFORMANCE OF twenty-nine point three% MAP
utt_0256 utt 803.88 806.18 -X AS THAT USING THE MANUAL ANNOTATIONS.
utt_0257 utt 806.79 810.44 -X IT IS AN ENCOURAGING OBSERVATION THAT MAYBE IN THE FUTURE,
utt_0258 utt 810.44 814.73 -X WE DO NOT NEED TO ANNOTATE AMODAL MASKS ANYMORE.
utt_0259 utt 815.59 819.43 -X HERE WE SHOW SOME QUALITATIVE AMODAL COMPLETION RESULTS.
utt_0260 utt 819.43 823.62 -X PLEASE PAY SPECIFIC ATTENTION TO THESE YELLOW OBJECTS.
utt_0261 utt 823.94 829.74 -X FOR THESE OBJECTS, THE RESULTS OF OUR METHOD ARE POTENTIALLY MORE NATURAL THAN THE GROUND TRUTH.
utt_0263 utt 831.40 838.76 -X OUR SCENE DE-OCCLUSION FRAMEWORK ALLOWS US TO DECOMPOSE A SCENE INTO BACKGROUND AND ISOLATED COMPLETED OBJECTS
utt_0266 utt 838.92 841.23 -X ALONG WITH AN OCCLUSION ORDERING GRAPH.
utt_0267 utt 841.61 847.88 -X THEREFORE MANIPULATING SCENES BY CONTROLLING ORDERING AND POSITIONS IS MADE POSSIBLE.
utt_0269 utt 847.91 850.49 -X WE SHOW FOUR KINDS OF MANIPULATIONS
utt_0270 utt 850.63 854.95 -X DELETING, SWAPPING, SHIFTING AND REPOSITIONING OBJECTS.
utt_0271 utt 854.95 861.16 -X THE BASELINE METHOD, MODAL-BASED MANIPULATION IS BASED ON IMAGE INPAINTING,
utt_0273 utt 861.16 862.76 -X WHERE MODAL MASKS ARE PROVIDED
utt_0274 utt 862.79 865.61 -X ORDERING AND AMODAL MASKS ARE UNKNOWN.
utt_0275 utt 866.25 869.29 -X OUR METHOD PRODUCES NATURAL MANIPULATIONS,
utt_0276 utt 869.29 873.19 -X WHILE RESULTS OF MODAL-BASED MANIPULATIONS CONTAIN LOTS OF DEFECTS.
utt_0278 utt 883.40 886.47 -X HERE IS AN INTERACTIVE DEMO FOR IMAGE MANIPULATION.
utt_0279 utt 886.73 890.25 -X WHEN YOU OPEN AN IMAGE AND PERFORM SCENE DE-OCCLUSION,
utt_0284 utt 902.31 904.81 -X WITH ITS SHAPE RECOVERED ACCURATELY.
utt_0287 utt 916.91 918.75 -X AND REPOSITIONING FURNITURES
utt_0289 utt 929.80 931.50 -X EXTRACTED FROM OTHER IMAGES,
utt_0291 utt 941.19 945.90 -X WITH SELF-SUPERVISED SCENE DE-OCCLUSION WE CAN DO A LOT MORE THINGS THAN BEFORE.
utt_0293 utt 945.99 954.25 -X FOR EXAMPLE, WE CAN PERFORM DATA AUGMENTATION FOR INSTANCE SEGMENTATION VIA RANDOMLY RE-ORGANIZING OBJECTS IN IMAGES
utt_0296 utt 954.86 959.37 -X IT MAY BE BETTER THAN INSTABOOST THAT CANNOT HANDLE THE OCCLUSION PROBLEM.
utt_0298 utt 959.91 961.42 -X FOR THE OTHER EXAMPLE
utt_0299 utt 961.45 968.05 -X THE PREDICTED ORDERING MIGHT FACILITATE THE MASK FUSION PROCESS IN PANOPTIC SEGMENTATION.
utt_0301 utt 968.05 971.85 -X SCENE DE-OCCLUSION ALSO POTENTIALLY BENEFITS AUGMENTED REALITY.
utt_0302 utt 971.85 974.06 -X FOR EXAMPLE, IN THE FIGURE BELOW,
utt_0303 utt 974.06 979.79 -X SCENE DE-OCCLUSION ENABLES US TO INSERT A threeD CHARACTER BEHIND SOME REAL OBJECTS IN THE SCENE.
utt_0305 utt 979.79 983.15 -X ALL OF THE THINGS ARE DONE WITHOUT EXTRA ANNOTATIONS.
utt_0306 utt 984.27 986.09 -X HERE ARE SOME DISCUSSIONS.
utt_0307 utt 986.38 989.36 -X FIRST, CAN IT SOLVE MUTUAL OCCLUSION?
utt_0308 utt 990.03 990.61 -X NO
utt_0309 utt 991.15 995.60 -X FOR MUTUAL OCCLUSIONS, THE ORDERING GRAPH IN OUR METHOD CANNOT BE DEFINED.
utt_0311 utt 995.98 997.77 -X AS SHOWN IN THESE IMAGES
utt_0312 utt 997.96 1001.61 -X FINE-GRAINED BOUNDARY-LEVEL DE-OCCLUSION IS REQUIRED.
utt_0313 utt 1001.87 1005.68 -X IT LEAVES AN OPEN QUESTION TO THE SCENE THE OCCLUSION PROBLEM.
utt_0314 utt 1006.31 1009.58 -X SECOND, CAN IT SOLVE CYCLIC OCCLUSIONS?
utt_0315 utt 1009.83 1011.41 -X THE ANSWER IS YES.
utt_0316 utt 1011.72 1017.52 -X OUR ORDER RECOVERY METHOD RECOVERS PAIRWISE ORDERING RATHER THAN SEQUENTIAL ORDERING.
utt_0318 utt 1017.64 1021.07 -X THEREFORE CYCLIC OCCLUSION IS NOT A BIG ISSUE.
utt_0319 utt 1021.87 1023.18 -4.3643 THANK YOU FOR WATCHING
