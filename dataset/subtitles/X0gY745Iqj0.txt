utt_0000 utt 7.18 7.86 -X [MUSIC]
utt_0001 utt 9.00 17.58 -X HI EVERYONE, MY NAME IS JIONG XIE, I'M A SENIOR STAFF ENGINEER AT ALIBABA DAMO
utt_0002 utt 17.58 25.42 -X ACADEMY AND ALIBABA CLOUD. I'M VERY HONORED TO GIVE THIS SPEECH AT VLDB two thousand and twenty-two ABOUT GANOS,
utt_0003 utt 25.42 34.90 -X A MULTI-DIMENSIONAL DYNAMIC AND SCENE-ORIENTED CLOUD-NATIVE SPATIAL DATABASE ENGINE DEVELOPED BY OUR TEAM. OKAY THANKS EVERYBODY FOR JOINING, WE ARE GOING TO GET GOING.
utt_0005 utt 37.16 52.03 -X FIRST OF ALL, I WILL GIVE SOME BACKGROUND KNOWLEDGE ABOUT THE RECENT PROGRESS IN THIS FIELD. IN RECENT YEARS WE HAVE ENTERED A NEW ERA OF CITY DIGITAL TWINS. SO THE FIRST QUESTION IS WHAT ARE THE DIGITAL TWINS, THE CITY DIGITAL TWINS TECHNOLOGY DEVELOPS
utt_0008 utt 52.03 65.30 -X DIGITIZATION COPIES OF OUR CITIES AND THE MANAGERS THEM FOR THE BI-DIRECTIONAL INTERACTION BETWEEN DIGITAL AND THE REAL WORLDS. IT HAS BROADER APPLICATIONS IN URBAN PLANNING,
utt_0010 utt 65.30 70.45 -X SMART TRAFFIC MANAGEMENT, AUTOMATED ENVIRONMENT MONITORING, AND SO FORTH.
utt_0011 utt 72.11 86.51 -X SO MDS DATA IS A VERY IMPORTANT KIND OF DATA THAT IS INCREASING FAST IN THE CITY DIGITAL TWINS APPLICATION. HERE MDS REFERS TO MULTI-DIMENSIONAL, DYNAMIC, AND SCENE-ORIENTED SPATIAL DATA. COMPARED
utt_0013 utt 86.51 99.92 -X WITH TRADITIONAL SPATIAL DATA THAT IS OFTEN STATIC AND TWO-DIMENSIONAL, MDS DATA CAN MODEL REAL-LIFE OBJECTS MUCH MORE PRECISELY. HERE ARE TWO CASES OF MDS DATA, THE FIRST CASE IS ABOUT
utt_0015 utt 99.92 113.91 -X BUILDING INFORMATION MODELING, BIM DATA REPRESENTS REAL-WORLD OBJECTS AS threeD ENTITIES WITH TEXTURES AND MATERIALS, SO TEXTURES AND MATERIALS ARE THE VISUAL INFORMATION THAT ARE RARELY CONSIDERED BY
utt_0017 utt 113.91 121.55 -X TRADITIONAL SPATIAL DATA. THE SECOND CASE IS ABOUT UAV TRAJECTORIES, THE TRAJECTORY DATA IS COMPOSED
utt_0018 utt 121.55 129.25 -X OF threeD GEO-POSITIONS WHICH CHANGE OVER TIME AND IT ALSO HAS SCENE-ORIENTED INFORMATION SUCH AS
utt_0019 utt 129.25 137.04 -X TAKING OFF AND LANDING EVENTS AND THAT COLLECTS REMOTE SENSING IMAGES WITH TIME STAMP INFORMATION.
utt_0020 utt 138.48 150.16 -X SO, WHAT ARE THE CHALLENGES TO SUPPORTING THE MDS DATA FOR THE DESIGN OF OUR DBMS(DATABASE MANAGEMENT SYSTEM). THE FIRST IS ABOUT THE DATA TYPES, SO MDS DATA HAS MUCH MORE
utt_0022 utt 150.16 156.50 -X COMPLEX DATA STRUCTURES AND A MUCH LARGER DATA SIZE THAN TRADITIONAL SPATIAL DATA. FOR INSTANCE,
utt_0023 utt 156.50 163.51 -X THE SIZE OF A BIM OBJECT CAN BE A FEW ORDERS OF MAGNITUDE LARGER THAN THAT OF POI OBJECT.
utt_0024 utt 164.53 176.72 -X THE SECOND IS ABOUT QUERY TYPES, MANY DIFFERENT TYPES OF QUERIES SHOULD BE SUPPORTED, INCLUDING SPATIAL, SPATIO-TEMPORAL, SCENE-ORIENTED, AND CROSS-MODEL QUERIES. THE LAST POINT IS ABOUT
utt_0026 utt 176.72 190.95 -X EFFICIENCY, THE LARGE-SCALE AND COMPLEX DATA STRUCTURE RESULTS IN LONG QUERY TIME. WE FOUND THAT A BIG QUERY CAN TAKE HOURS TO FINISH, SO SOLVING THE QUERY PERFORMANCE PROBLEM IS
utt_0028 utt 190.95 197.01 -X A BIG CHALLENGE TO US. OKAY AS FAR AS WE KNOW, TRADITIONAL SPATIAL RDBMS(RELATIONAL DATABASE
utt_0030 utt 203.06 216.66 -X TO OVERCOME THESE CHALLENGES, WE DEVELOPED A NEW CLOUD-NATIVE SPATIAL RDBMS ENGINE CALLED GANOS. THE NAME COMES FROM THE GODDESS OF EARTH GAIA, AND THE GOD OF TIME CHRONOS.
utt_0032 utt 217.07 222.39 -X IT'S BUILT ON THE CLOUD-NATIVE RELATIONAL DATABASE POLARDB FOR POSTGRESQL,
utt_0033 utt 222.39 228.05 -X DEVELOPED BY ALIBABA CLOUD. I'D LIKE TO GIVE A BRIEF DESCRIPTION OF FEATURES OF GANOS,
utt_0034 utt 228.43 236.55 -X IT CONSIDERS MDS DATA AS FIRST-CLASS CITIZENS, WE PRESENT A NEW MULTI-DIMENSIONAL DATA HIERARCHY AND
utt_0035 utt 236.55 245.81 -X PROVIDE A SYSTEMATIC FRAMEWORK TO MANAGE THE MDS DATA. IT UTILIZES CLOUD-NATIVE APPROACHES TO SOLVE
utt_0036 utt 245.81 252.18 -X BIG STORAGE AND BIG QUERIES. I WILL INTRODUCE THESE MATTERS IN MORE DETAIL AS WE GO ON.
utt_0037 utt 253.81 267.19 -X THE FIGURE SHOWS THE ARCHITECTURE OF GANOS AND THE RELATION BETWEEN GANOS AND POLARDB. POLARDB ADAPTS SHARED STORAGE ARCHITECTURE THAT DECOUPLES COMPUTING FROM STORAGE. AT THE COMPUTATION LAYER,
utt_0039 utt 267.19 281.69 -X POLARDB HAS ONE PRIMARY NODE SUPPORTING BOTH READ AND WRITE AND MANY READ-ONLY NODES. GANOS IS A SPATIAL DATABASE ENGINE OF POLARDB, IT ENABLES POLARDB TO STORE INDEX AND QUERY MDS DATA,
utt_0041 utt 282.32 289.85 -X GANOS EXTENDS POLARDB IN FOUR ASPECTS, INCLUDING DATA MODELS, ACCESS METHODS, EXTENDED STORAGE,
utt_0042 utt 289.85 296.84 -X AND QUERY PROCESSING. LET'S LOOK AT THE DETAILS. IN THIS PAGE, I WOULD LIKE TO INTRODUCE FOUR MAIN
utt_0043 utt 296.84 304.98 -X MDS DATA TYPES SUPPORTED BY GANOS. threeD MESH IS USED TO REPRESENT A threeD OBJECT WITH SHAPE,
utt_0044 utt 305.33 312.44 -X VISUALS, AND GENERAL INFORMATION, SUCH AS A threeD BUILDING. VISUALS CONTAIN TEXTURES, MATERIALS,
utt_0045 utt 312.44 321.08 -X UV CODES, AND EVEN ANIMATION. TRAJECTORY IS USED TO REPRESENT A MOVING OBJECT WHOSE
utt_0046 utt 321.08 328.73 -X LOCATION CHANGES OVER TIME. IT CONTAINS SERIES OF KEY POINTS AND EVENTS. RASTER IS USED TO
utt_0047 utt 329.07 335.09 -X REPRESENT GRIDDED DATA WHERE EACH GRID IS ASSOCIATED WITH GEOLOCATION. FOR EXAMPLE,
utt_0048 utt 335.09 343.99 -X REMOTE SENSING IMAGES, IT CONTAINS FOOTPRINT, TIME STAMP, AND GRID MATRIX. OK, POINT CLOUD IS USED TO
utt_0049 utt 343.99 350.14 -X REPRESENT A COLLECTION OF threeD POINTS WITHIN DIMENSIONAL ATTRIBUTES. WE OFTEN USE IT FOR
utt_0050 utt 352.12 360.18 -X HIGH-DEFINITION MAP GENERATION IN AUTONOMOUS DRIVING. EACH MDS DATA TYPE IS IMPLEMENTED AS
utt_0051 utt 360.18 369.56 -X A COMPACT BINARY SEQUENCE CALLED SLOB. SLOB REFERS TO THE SPATIAL LARGE OBJECTS, EACH SLOB IS DIVIDED
utt_0052 utt 369.56 383.69 -X INTO TWO PARTS PROFILE AND DETAILS. PROFILE STORES THE SUMMARY OF AN OBJECT AND IT IS USED FOR FILTERING SUCH AS SPATIAL, SPATIO-TEMPORAL METADATA, AND DETAIL CONTAINS DETAILED INFORMATION
utt_0054 utt 383.69 392.06 -X OF AN OBJECT. HERE IS AN EXAMPLE SHOWING HOW GANOS STORES A BUILDING. A BUILDING IS DECOMPOSED INTO
utt_0055 utt 392.37 398.60 -X MULTIPLE COMPONENTS, FOR EXAMPLE A BUILDING HAS A BIG ROOF, MANY DOORS AND MANY TABLES
utt_0056 utt 399.86 406.65 -X AND SO ON. EACH COMPONENT CAN BE STORED AS A SLOB OF threeD MESH TYPE THAT IS COMPOSED OF SHAPE,
utt_0057 utt 406.65 420.86 -X TEXTURES, MATERIALS AND SO FORTH. IN A FORMAT OF COMPACT BINARY SEQUENCE, THE COMPONENTS SHARE THE SAME BUILDING ID, INDICATING THAT THEY BELONG TO THE SAME BUILDING. OKAY ACTUALLY
utt_0059 utt 420.86 428.38 -X WE JUST USE A VERY MATURE AND CLASSIC SPATIAL INDEX N D R-TREE BASED ON GIST+ FRAMEWORK.
utt_0060 utt 428.98 436.23 -X YOU KNOW GIST REFERS TO THE GENERALIZED SEARCH TREE, ORIGINALLY PROVIDED BY POSTGRESQL, GIST+
utt_0061 utt 436.66 445.66 -X EXTENDS GIST IN THE WAY THAT GIST+ CAN SELECT AMONG INDEXES FOR ANSWERING A QUERY ON THE FLY.
utt_0062 utt 447.73 454.55 -X OKAY THIS IS THE EXTENDED STORAGE MECHANISM OF GANOS, GANOS ALLOWS STORING SLOB PROFILE
utt_0063 utt 454.55 464.15 -X IN A DATABASE TABLE AND THE STORING DETAILS ON OSS. OSS REFERS TO OBJECT STORAGE SERVICE,
utt_0064 utt 464.18 478.07 -X JUST LIKE AMAZON'S Sthree. WE SUPPORT TWO EXTENDED STORAGE METHODS FOR DIFFERENT APPLICATIONS HOT/COLD DATA SEPARATION AND HETEROGENEOUS FILE ACCESS. FOR EXAMPLE THE LAST ROW IN THE FIGURE
utt_0066 utt 478.07 485.34 -X IS USING HETEROGENEOUS FILE ACCESS, WE BUILD THE DIRECT LINKS TO THE EXTERNAL FILES ON OSS,
utt_0067 utt 487.35 496.22 -X SUCH AS FOR REMOTE SENSING IMAGES GOB FOR threeD MODELS. WE WE WILL STORE PROFILE AND
utt_0068 utt 496.22 503.18 -X EXTERNAL FILES OSS INFORMATION IN TABLE IN LINE. THE SPATIAL OBJECT LOCATOR HIDES THE
utt_0069 utt 503.18 512.47 -X UNDERLYING STORAGE DETAILS AND ALLOWS THE QUERY PROCESSOR TO ACCESS THE DATA IN DIFFERENT WAYS.
utt_0070 utt 513.72 522.14 -X SO EXTENDED STORAGE CAN ACHIEVE A DECENT TRADE-OFF BETWEEN STORAGE COST AND THE QUERY PERFORMANCE.
utt_0071 utt 523.83 538.39 -X GANOS SUPPORTS SPATIAL QUERIES, SPATIO-TEMPORAL QUERIES, SCENE-ORIENTED QUERIES, AND CROSS MODEL QUERIES. TRADITIONAL SPATIAL RDBMS ARE VERY MATURE IN SPATIAL QUERIES, BUT THEY HAVE LIMITED SUPPORT
utt_0073 utt 538.39 551.26 -X FOR SPATIO-TEMPORAL QUERIES AND SCENE-ORIENTED QUERIES. GANOS HAS IMPLEMENTED HUNDREDS OF OPERATIONS TO SUPPORT THESE QUERIES, THE TABLE LISTS SOME EXAMPLES ON THE SUPPORTED QUERIES. OKAY
utt_0075 utt 553.24 561.50 -X GANOS EXTENDS THE PARALLELISM MECHANISM OF POLARDB TO ACCELERATE THE QUERY PROCESSING AND IMPLEMENT
utt_0076 utt 561.50 570.40 -X SPATIAL ORIENTED MULTI-LEVEL PARALLELISM INCLUDING IQP AND IFP. IQP PARALLELIZES A BIG QUERY BY
utt_0077 utt 570.40 580.92 -X SIGNING DATA SLICES TO MANY RO NODES. DATA SLICE ASSIGNMENT CAN BE HASH BASED OR DYNAMIC. IFP IS
utt_0078 utt 581.11 587.84 -X A FINAL GRANULARITY PARALLELISM COMPARED TO IQP. LET'S LOOK AT THE PICTURE ON THE RIGHT,
utt_0079 utt 587.84 592.03 -X IF ROLE NUMBER ONE IS A HUGE CELL, FOR EXAMPLE A BIG ROOF OF A BUILDING,
utt_0080 utt 592.28 606.14 -X IFP WILL DIVIDE IT INTO FOUR SUB-OBJECTS AND CREATES FOUR SUB-PROCESSES TO PROCESS THEM IN PARALLEL. SO WHAT IS IFP FOR, IFP IS USED TO MITIGATE THE POTENTIAL LOAD IMBALANCE
utt_0082 utt 606.14 612.57 -X PROBLEM THAT IS CAUSED BY THE EXISTENCE OF SPATIAL OBJECTS WITH DRASTIC SIZE DIFFERENCES.
utt_0083 utt 614.26 620.00 -X OKAY HERE WE GIVE A SIMPLE USE CASE STUDY ABOUT THE CROSS MODEL QUERY FOR
utt_0084 utt 622.36 629.31 -X CHECKING THE TRAJECTORY OF A UAV AND ITS RELATION WITH BUILDINGS AND THE GROUND IN
utt_0085 utt 630.65 643.87 -X A CITY DIGITAL TWINS SCENE WITH DIFFERENT DATA TYPES. LET'S LOOK AT THE PICTURE WE USE threeD GEOMETRY TYPE TO MODEL NO-FLY ZONE, USE RASTER TYPE TO MODEL DIGITAL REVOLUTION MODEL,
utt_0087 utt 643.87 649.15 -X USE threeD MESH TAB TO MODEL BUILDINGS AND THERE'S A TRAJECTORY TYPE TO MODEL THE TRACK OF UV.
utt_0088 utt 650.33 660.91 -X HERE WE GAVE TWO MDS SQL EXAMPLES YOU CAN SEE OUR PAPERS FOR DETAILS. THE BOTTOM LINE IS BY USING
utt_0089 utt 660.91 666.75 -X SIMPLE SQL TO PERFORM THE COMPLEX CROSS MODEL QUERIES IN THE APPLICATIONS OF DIGITAL TWINS,
utt_0090 utt 666.84 673.79 -X USERS CAN BENEFIT FROM REDUCING THE DEVELOPMENT COST AND THE COMPLEXITY OF THE SYSTEMS.
utt_0091 utt 675.58 684.06 -X THIS PAGE GIVES SOME KEY EVALUATION RESULTS OF GANOS. SO THE DATA SETS WE USE INCLUDE OSM
utt_0092 utt 684.06 697.50 -X DATA AND THE REAL BIM DATA, THERE ARE THREE KEY CONCLUSIONS WE CAN GET FROM THE RESULTS. OSS CAN REDUCE STORAGE COST WITH AN ACCEPTABLE SACRIFICE OF QPS. ALTHOUGH READING DATA FROM OSS IS SLOW,
utt_0094 utt 697.50 709.79 -X WITH THE HELP OF THE INDEXES THE QUERY PERFORMANCE ON SPATIAL TEMPORAL QUERIES IS STILL ACCEPTABLE. SPATIAL-ORIENTED MULTI-LEVEL PARALLELISM WITH IQP PLUS IFP CAN SIGNIFICANTLY ACCELERATE THE PROCESS YOU KNOW BIG QUERIES ON MDS DATA.
utt_0098 utt 714.88 726.62 -X TO A TOTAL OF forty-five APPLICATION DIRECTIONS. IN THIS SECTION I WILL INTRODUCED SEVERAL NOVEL APPLICATIONS. THE FIRST CASE IS ABOUT threeD SCENES AND ANALYTICS WITH THE INTERPRETATION OF BIM
utt_0100 utt 726.62 738.19 -X AND threeD GIS. WE ACHIEVE IN-DEPTH BASED COMPUTATION ACCELERATION BY NEARLY one hundred TIMES IN URBAN PLANNING AND CONSTRUCTION OF A STATE LEVEL NEW AREA IN CHINA. THE SECOND AND THIRD CASES ARE ABOUT
utt_0102 utt 739.71 750.94 -X QUERYING DYNAMIC DATA AND THE DATABASES FOR GEO AI. THEY ARE VERY IMPORTANT APPLICATION AREAS FOR MODERN SPATIAL DATABASE YOU CAN SEE OUR PAPERS FOR DETAILS AND THE LESSONS WE LEARNED FROM OUR
utt_0105 utt 755.62 766.30 -X CLOUD COMPUTING, THE EXISTING SPATIAL RELATIONAL DATABASES CANNOT MEET THE REQUIREMENT OF MODERN APPLICATIONS FOR MDS DATA PROCESSING. SO GANOS PROVIDES A SYSTEMATIC FRAMEWORK OF DATA MODELS,
utt_0107 utt 767.16 778.30 -X ACCESS METHODS, AND OPERATIONS FOR MDS DATA. ESPECIALLY GANOS OPTIMIZES THE PROCESSING OF QUERIES ON MDS DATA THROUGH CLOUD-NATIVE CAPABILITIES, WHICH PROVIDES A NEW PRACTICE
utt_0109 utt 778.36 784.80 -X OF MOVING FROM TRADITIONAL ON-PREMISE SPATIAL DATABASE TO CLOUD-NATIVE SPATIAL DATABASE.
utt_0110 utt 784.80 791.01 -X OKAY IN THE FUTURE WORK, WE CONSIDER LEVERAGING GPU RESOURCES ON THE CLOUD TO ACCELERATE GANOS
utt_0111 utt 792.54 800.06 -X AND UTILIZING THE POLARDB SERVERLESS FRAMEWORK TO ACHIEVE BETTER DYNAMIC RESOURCE PROVISIONING.
utt_0112 utt 801.40 803.20 -4.8520 THANK YOU FOR YOUR ATTENTION!
