utt_0000 utt 0.05 4.43 -X HI EVERYONE, MY NAME IS JASPER AND I’M A PHD CANDIDATE AT THE UNIVERSITY OF WASHINGTON.
utt_0001 utt 4.43 9.74 -X IN THIS TALK, I’LL BE PRESENTING IMPRIMER: COMPUTATIONAL NOTEBOOKS FOR CNC MILLING.
utt_0002 utt 9.74 15.41 -X THIS IS JOINT WORK (NO PUN INTENDED) WITH MY COLLABORATORS GABRIELLE BENABDALLAH AND NADYA PEEK.
utt_0004 utt 15.66 26.32 -X AS MACHINES LIKE threeD PRINTERS AND CNC MILLS BECOME MORE ACCESSIBLE TO NON-EXPERTS, WE’VE SEEN INCREASINGLY EXPLORATORY USE CASES EMERGE IN SCIENCE, ART, AND ENGINEERING.
utt_0006 utt 26.32 40.15 -X FOR EXAMPLE, threeD PRINTING BATTERIES ON THE MICRON SCALE, USING CELLULAR AUTOMATA TO MAKE POTTERY, OR USING MACHINE LEARNING TO TEST AND DESIGN threeD PRINTED LATTICES FOR WITHSTANDING IMPACTS.
utt_0009 utt 40.15 43.73 -X WE HAVE SOLID INFRASTRUCTURE FOR COMMON FABRICATION TASKS.
utt_0010 utt 43.73 58.61 -X TYPICALLY WE’D HAVE A CAD EDITOR FOR PRODUCING GEOMETRY, A SEPARATE APPLICATION FOR TRANSLATING GEOMETRY INTO MACHINE INSTRUCTIONS, PERHAPS SOME POST-PROCESSING AFTER THAT, AND THEN ANOTHER APPLICATION FOR DEPLOYING INSTRUCTIONS TO THE MACHINE.
utt_0013 utt 59.18 68.12 -X HOWEVER, IF WE NEED TO DEVIATE FROM THESE STEPS TO MAKE SOMETHING THAT ESTABLISHED SOFTWARE DOESN’T SUPPORT, WE’RE PRETTY MUCH ON OUR OWN.
utt_0015 utt 68.12 77.52 -X SAY WE WANT TO REPLICATE THIS EXPLORATORY WORKFLOW CALLED WIREPRINT BY MUELLER AND COLLEAGUES WHERE THEY PRINT A WIREFRAME OF A MODEL RATHER THAN THE ENTIRE OBJECT.
utt_0017 utt 77.52 92.28 -X THE CONCEPT IS STRAIGHTFORWARD ENOUGH, BUT THE DETAILS ARE NOT AT ALL—THERE ARE A TON OF PHYSICS INVOLVED IN GETTING THE TRIANGLES TO STAND UP AT ALL, AND THE ONLY TOOL WE HAVE FOR THIS FUNDAMENTALLY IS RAW MACHINE INSTRUCTIONS, HERE G-CODE.
utt_0020 utt 92.69 100.63 -X AND WE REALLY NEED BE ABLE TO DO SOME TESTING BEFORE WE CAN DEVELOP FORMALIZATIONS, JUST SO WE CAN GET AN IDEA OF THE DESIGN SPACE.
utt_0022 utt 101.23 106.84 -X TAKING A STEP BACK, WE REALLY OUGHT TO THINK ABOUT HOW WE’RE APPROACHING EXPLORATORY FABRICATION.
utt_0024 utt 106.93 117.17 -X IN AN ARTICLE ABOUT THE BENEFITS OF COMBINING HUMAN-COMPUTER INTERACTION AND PROGRAMMING LANGUAGES RESEARCH, CHASINS ET AL. SAY THAT “WHILE BOTH GUIS AND LANGUAGES … [MAKE]
utt_0026 utt 117.17 122.45 -X IT EASY TO SAY COMMON THINGS, A LANGUAGE EMPOWERS USERS TO SAY UNCOMMON THINGS TOO.”
utt_0027 utt 123.06 131.57 -X WE’RE INTERESTED UNCOMMON TASKS BY DEFINITION, SO WE SHOULD CONSIDER HOW TO VIEW EXPLORATORY FABRICATION FROM A PROGRAMMING LANGUAGE LENS.
utt_0029 utt 132.31 137.53 -X WE CAN SEE THAT G-CODE’S LOW-LEVEL CONTROL ALONE IS NOT ENOUGH.
utt_0030 utt 137.53 151.00 -X NAMELY, WRITING SNIPPETS OF G-CODE LACKS MANY FEATURE OF PROGRAMMING LANGUAGES THAT WE TAKE FOR GRANTED, FOR EXAMPLE: FUNCTIONS, VISUALIZATION, TESTING, PREVIEWING IN-SITU, INTEROPERATING
utt_0032 utt 151.00 154.42 -X WITH OUTSIDE LIBRARIES, AND ADAPTING TO DIFFERENT MACHINES.
utt_0033 utt 155.09 163.83 -X ONE PROMISING FIRST STEP IN THIS DIRECTION IS Pfive.FAB, WHICH PROVIDES A JAVASCRIPT WRAPPER AROUND COMMON G-CODE COMMANDS FOR threeD PRINTING.
utt_0035 utt 163.96 169.24 -X BUT, WE NEED TO TAKE THIS IDEA EVEN FURTHER THAN G-CODE AS A FOUNDATION.
utt_0036 utt 169.78 175.74 -X ONE PATH FORWARD IS LITERATE PROGRAMMING WHERE PROGRAMS COMPRISE NATURAL LANGUAGE, ILLUSTRATIONS,
utt_0037 utt 175.74 178.78 -X INTERACTIVE ELEMENTS INTERLEAVED WITH SOURCE CODE.
utt_0038 utt 178.96 188.92 -X COMPUTATIONAL NOTEBOOKS, AN EXAMPLE OF LITERATE PROGRAMMING, ARE COMMONLY USED IN SCIENTIFIC COMPUTING, MACHINE LEARNING, AND RELATED FIELDS WHICH DEAL WITH DIGITAL DATA.
utt_0040 utt 189.37 192.67 -X BUT COULD WE EXTEND NOTEBOOKS TO THE PHYSICAL WORLD AS WELL?
utt_0041 utt 193.53 203.74 -X TO TEST THIS CONCEPT, WE BUILT IMPRIMER, WHERE THE END USER WORKS FROM A COMPUTATIONAL NOTEBOOK ON THE LEFT TO USE A CNC MILL WITH AN AR PROJECTION GUIDE ON THE RIGHT.
utt_0043 utt 204.12 210.06 -X IN OUR IMPLEMENTATION, WE USED THE OBSERVABLE NOTEBOOK TOOL AND A LARGE CNC MILL FOR WOOD
utt_0045 utt 217.24 218.78 -X UNITS, ninety-six BY sixty INCHES.
utt_0046 utt 220.98 228.28 -X IN PARTICULAR, WE CHOSE TO BUILD IMPRIMER FOR CNC MILLING, RATHER THAN FOR OTHER TYPES OF DIGITAL FABRICATION.
utt_0048 utt 228.28 236.80 -X THIS IS BECAUSE OF THE STEEP LEARNING CURVE IT PRESENTS TO THOSE WITHOUT PRIOR EXPERIENCE WHICH MAKE IT DIFFICULT TO BREAK FROM CONVENTIONAL FABRICATION.
utt_0050 utt 236.80 241.21 -X THREE CHALLENGES IN PARTICULAR ARE: CHOOSING AN END MILL THAT’S RIGHT FOR A GIVEN JOB,
utt_0051 utt 241.46 255.36 -X NEEDING TO STRATEGICALLY TRANSLATE GEOMETRIC FEATURES INTO TOOLPATH OPERATIONS, AND UNDERSTANDING SAFETY RISKS THAT CAN RESULT FROM EVEN MINOR MISSTEPS—HERE AN END MILL BROKE IN HALF DUE TO USING TOO FAST OF A MILLING FEED.
utt_0054 utt 256.92 264.12 -X WE’LL WALK THROUGH THE SYSTEM BY GOING THROUGH AND EXAMPLE WHERE FABRICATORS CAN DO SURFACE MILLING BY SAMPLING twoD FUNCTIONS FROM MATH.
utt_0056 utt 264.34 273.12 -X FOR EXAMPLE, HERE WE HAVE THE SINC FUNCTION WHICH LOOKS LIKE A RIPPLE IN A POND AND THE USER CAN REWRITE CODE AND CHANGE PARAMETERS TO GET A DESIRED TOOLPATH.
utt_0058 utt 273.27 282.17 -X THEY CAN THEN CUT SCALE EXAMPLES AND EXPERIMENT AND THEN DEPLOY FROM THE NOTEBOOK WITHOUT EVER HAVING HAD TO DO ANY threeD MODELING.
utt_0060 utt 283.58 289.25 -X IN THE NOTEBOOK ITSELF, WE INTRODUCE A LIBRARY TO HELP USERS REASON ABOUT THE DIFFERENT CHALLENGES MENTIONED BEFORE.
utt_0062 utt 289.59 294.78 -X THEY CAN PREVIEW, TEST, AND ITERATE QUICKLY JUST BY EDITING CODE IN A SINGLE NOTEBOOK,
utt_0063 utt 294.78 297.25 -X RATHER THAN WORKING ACROSS MULTIPLE PROGRAMS.
utt_0064 utt 297.25 302.91 -X THERE ARE TOO MANY DETAILS TO MENTION HERE, SO PLEASE CHECK OUT THE PAPER FOR MORE INFORMATION.
utt_0065 utt 303.03 314.43 -X TO SUPPORT THE LIBRARY, WE DEVELOPED A NETWORK ARCHITECTURE TO CONNECT THE SHOPBOT WITH THE USER’S NOTEBOOK, AS WELL AS AN AUGMENTED REALITY OVERLAY FOR VISUALIZING MOVEMENTS ON THE SHOPBOT’S PHYSICAL BED.
utt_0068 utt 314.91 319.26 -X CODE EXECUTED IN THE NOTEBOOK DIRECTLY AFFECTS BOTH THE SHOPBOT AND THE OVERLAY.
utt_0069 utt 319.80 325.95 -X THIS ELIMINATES THE NEED TO EXPORT AND IMPORT FILES FROM SEPARATE PROGRAMS, WHICH IS NORMALLY REQUIRED.
utt_0071 utt 325.95 333.86 -X IN THIS EXAMPLE NOTEBOOK, WE USE A PRECONDITION CHECK TO ENSURE CERTAIN CRITERIA ARE SATISFIED IN THE NOTEBOOK BEFORE THE USER CAN START THE SHOPBOT.
utt_0073 utt 334.30 339.71 -X ONCE THESE ARE SATISFIED, WE CAN MILL DIRECTLY FROM THE NOTEBOOK, HERE USING PURPLE INSULATION FOAM.
utt_0075 utt 341.60 354.24 -X IN THE END, WE EXPLORED A RANGE OF DIFFERENT FUNCTIONS AND DIFFERENT PARAMETERS AND CAST THE MOLDS ON THE LEFT WITH PLASTER TO GET SOME COOL MATH-INSPIRED TILES ON THE RIGHT WHICH WOULD MAKE A GREAT DECORATION FOR A MAKERSPACE OR MATH CLASSROOM NEAR YOU.
utt_0078 utt 355.68 360.45 -X HERE’S A SECOND EXAMPLE WHERE WE USE THE MACHINE AS A LOW-FIDELITY SKETCHING INTERFACE.
utt_0079 utt 360.48 367.17 -X ON THE LEFT WE HAVE AN ELEMENT WHERE THE PROGRAMMER CAN DIRECTLY SKETCH, AND THE PATH THEY CREATE IS DATA THAT’S STORED IN A VARIABLE.
utt_0081 utt 367.49 375.49 -X BECAUSE OBSERVABLE NOTEBOOKS ARE LIVE PROGRAMMING ENVIRONMENTS, THE NEW DATA THEN PROPAGATES IMMEDIATELY TO ALL OTHER CELLS IN THE NOTEBOOK.
utt_0083 utt 375.49 379.91 -X IN THIS EXAMPLE, THE UPDATED PATH GENERATES A DIFFERENT VISUALIZATION OF THE MACHINE’S TOOL PATH.
utt_0085 utt 380.16 386.11 -X THE NOTEBOOK ALSO SENDS VISUALIZATIONS TO THE AR OVERLAY SO TOOLPATHS CAN BE VISUALIZED IN SITU.
utt_0087 utt 387.42 392.90 -X AS AN EXAMPLE OF THIS, IN THE NOTEBOOK, WE DISPATCH A JOB TO CUT THE C IN CHI.
utt_0088 utt 393.57 396.19 -X THE PROJECTION SHOWS WHERE THE MILL IS GOING TO MOVE.
utt_0089 utt 405.02 409.73 -X WE NOTICE THAT THE FINISH LEFT BY THE C AND THE H IS NOT WHAT WE WANT.
utt_0090 utt 409.98 416.39 -X TO CHANGE THIS, WE SIMPLY GO INTO THE NOTEBOOK AND CHANGE THE CODE CELL THAT GENERATES THE FEED RATE, OR HOW FAST THE MILL MOVES.
utt_0092 utt 416.39 423.43 -X WE ADD A CORRECTION FACTOR TO SLOW DOWN THE FEED AND THEN WE USE THIS NEW FEED TO CUT THE I IN CHI.
utt_0094 utt 425.34 429.60 -X THIS RESULTS IN A BETTER FINISH.
utt_0095 utt 429.60 440.39 -X AND IN ONE LAST EXAMPLE, WE CREATED A PARAMETRIC SHELF GENERATOR WHERE A FABRICATOR CAN EXPERIMENT WITH DIFFERENT SHELF PARAMETERS LIKE HEIGHT, WIDTH, DEPTH, SHELF COUNT, AND SPACING.
utt_0097 utt 440.83 450.85 -X AGAIN, BECAUSE IMPRIMER NOTEBOOKS ARE LIVE, CHANGING ANYTHING CAUSES THE RENDERING TO BE UPDATED IMMEDIATELY, AS WELL AS ALL THE twoD GEOMETRIES AND CUTTING PATHS IN REAL TIME.
utt_0099 utt 451.07 456.20 -X WE ALSO INCLUDED TESTING FUNCTIONALITY TO TEST THE FIT OF THE JOINTS WHICH CAN VARY BY MACHINE.
utt_0101 utt 457.47 468.90 -X TAKING A STEP BACK, HAVING PROGRAMMING AS A FOUNDATION IS CRITICAL BECAUSE IT HELPS US WORK WITH A VARIETY OF DOMAINS, FOR EXAMPLE, IN DEEP LEARNING, DATA VISUALIZATION, AND ROBOTICS.
utt_0104 utt 469.47 481.77 -X HOWEVER, WHEN IT COMES TO MANIPULATING PHYSICAL MATTER, WE DON’T YET HAVE REUSABLE CODE INFRASTRUCTURE THAT HELPS THE COMMUNITY TACKLE NEW CHALLENGES THAT CONVENTIONAL TOOLS HAVEN’T YET BEEN DESIGNED FOR.
utt_0107 utt 482.56 494.63 -X IN THIS LIGHT, IMPRIMER IS A FIRST STEP TOWARDS ROBUST PHYSICAL-DIGITAL PROGRAMMING, WHERE CHALLENGES WITH TOOLING, MATERIALS, TOOLPATH GENERATION, AND SAFETY ARE ALL HANDLED THROUGH CODE.
utt_0110 utt 494.98 505.86 -X IN A FUTURE WITH ROBUST PHYSICAL-DIGITAL PROGRAMMING, PRACTITIONERS FROM DIVERSE BACKGROUNDS CAN CONFIDENTLY WORK WITH PROGRAMMABLE MACHINES IN NEW WAYS AND SHARE THEIR WORK WITH THE COMMUNITY.
utt_0113 utt 506.79 510.38 -X THAT BEING SAID, WE URGE YOU TO TRY IMPRIMER YOURSELF!
utt_0114 utt 510.38 516.55 -X TO BROWSE THE NOTEBOOKS WE AUTHORED FOR THE EXAMPLES WE SHARED, HEAD OVER TO OUR COLLECTION ON OBSERVABLE NOTEBOOKS.
utt_0116 utt 516.61 524.94 -X IF YOU’D LIKE TO ACTUALLY USE THE NOTEBOOKS WITH YOUR OWN SHOPBOT, YOU’LL NEED TO RUN ADDITIONAL CODE FOR THE NETWORK ARCHITECTURE, AND SUPPORT FOR MORE MACHINES IS COMING SOON.
utt_0118 utt 525.67 534.06 -X FINALLY, WE’D LIKE TO THANK THE ALFRED P. SLOAN FOUNDATION FOR GENEROUS SUPPORT IN MAKING THIS WORK POSSIBLE, AND TO YOU, OUR AUDIENCE, FOR LISTENING.
