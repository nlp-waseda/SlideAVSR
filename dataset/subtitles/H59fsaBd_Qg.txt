utt_0000 utt 3.05 11.41 -X HI, MY NAME IS TIBOR AND I WILL PRESENT OUR WORK ON VECTORIZATION OF LINE DRAWINGS USING AN INTEGER-GRID PARAMETRIZATION.
utt_0001 utt 11.41 20.59 -X THIS WORK WAS DONE IN COLLABORATION WITH MISHA BESSMELTSEV, DAVID BOMMES, AND ADRIEN BOUSSEAU.
utt_0002 utt 20.59 24.69 -X IN THIS WORK WE LOOK AT THE PROBLEM OF VECTORIZATION OF LINE DRAWINGS:
utt_0003 utt 24.69 28.02 -X GIVEN A BITMAP LINE DRAWING, SUCH AS THE ONE ON THE LEFT,
utt_0004 utt 28.17 32.30 -X WE WANT TO CONVERT IT INTO A SET OF PARAMETRIC CURVES, ON THE RIGHT.
utt_0005 utt 34.67 39.63 -X THIS KIND OF VECTOR REPRESENTATION IS OFTEN MORE CONVENIENT THAN A BITMAP,
utt_0006 utt 39.79 44.37 -X BECAUSE IT IS RESOLUTION-INDEPENDENT AND MORE COMPACT IN TERMS OF SIZE.
utt_0007 utt 44.91 49.46 -X IT ALSO FACILITATES EDITING OPERATIONS.
utt_0008 utt 49.46 54.99 -X MOREOVER, VECTOR CURVES CAN BE USED AS AN INPUT TO A VARIETY OF SKETCH PROCESSING ALGORITHMS,
utt_0009 utt 54.99 62.45 -X FOR INSTANCE FOR COLORIZATION, OR SKETCH BASED MODELING.
utt_0010 utt 62.45 65.46 -X ESPECIALLY FOR ROUGH INPUT DRAWINGS SUCH AS THIS ONE HERE,
utt_0011 utt 65.55 68.98 -X VECTORIZATION IS A CHALLENGING PROBLEM.
utt_0012 utt 68.98 76.05 -X ARGUABLY THE BIGGEST CHALLENGE IS THE PROPER RECONSTRUCTION OF JUNCTIONS, WHICH MIGHT BE VERY FUZZY IN THE PRESENCE OF OVER-SKETCHING.
utt_0013 utt 77.97 83.15 -X LET'S HAVE A LOOK AT HOW THE EXISTING VECTORIZATION METHODS COPE WITH THESE CHALLENGES.
utt_0014 utt 84.30 88.31 -X MANY OF THESE METHODS USE SKELETONIZATION TO VECTORIZE THE STROKES,
utt_0015 utt 88.31 91.06 -X WHICH ONLY MAKES THEM SUITABLE FOR CLEAN INPUT.
utt_0016 utt 91.60 95.09 -X AN EXAMPLE OF THIS IS THE METHOD OF [NORIS ET AL. two thousand and thirteen].
utt_0017 utt 96.05 101.68 -X [FAVREAU ET AL. two thousand and sixteen] USED A REGION BASED SKELETON, WHICH IS MORE ROBUST TO OVER SKETCHING
utt_0018 utt 102.19 107.54 -X HOWEVER, FOR OPEN CURVES, THEY STILL NEED TO USE A CLASSICAL NOISY SKELETON.
utt_0019 utt 108.49 111.35 -X THEY ALSO EMPLOY STOCHASTIC OPTIMIZATION,
utt_0020 utt 111.35 114.20 -X WHICH ALLOWS THEM TO MERGE CONSECUTIVE CURVES,
utt_0021 utt 114.32 116.76 -X BUT PARALLEL CURVES CANNOT BE MERGED.
utt_0022 utt 118.32 122.42 -X CLOSEST TO OUR METHOD IS THE METHOD BY [BESSMELTSEV AND SOLOMON two thousand and nineteen],
utt_0024 utt 123.25 130.48 -X WHICH TRACES THE STREAMLINES OF A FRAME FIELD IN ORDER TO OBTAIN A DENSE SET OF CANDIDATE CURVES.
utt_0026 utt 130.48 135.91 -X THEY HOWEVER USE A GREEDY ALGORITHM TO CLUSTER THESE CURVES INTO THE FINAL VECTORIZATION
utt_0028 utt 137.30 140.34 -X WE TOOK INSPIRATION FROM THEIR USE OF A FRAME FIELD,
utt_0029 utt 140.34 143.19 -X BUT INSTEAD OF TRACING THE FRAME FIELD EXPLICITLY,
utt_0030 utt 143.22 150.29 -X WE INTEGRATE IT IMPLICITLY USING A FIELD-ALIGNED PARAMETERIZATION.
utt_0031 utt 150.45 157.04 -X AN IMPORTANT OBSERVATION HERE IS THAT NONE OF THESE METHODS IS ABLE TO MERGE PARALLEL STROKES.
utt_0033 utt 159.38 161.91 -X HERE IS A CONCRETE EXAMPLE OF A ROUGH INPUT
utt_0034 utt 161.94 167.28 -X AND YOU CAN NOTICE THAT THE EXISTING METHODS FAIL TO PRODUCE THE INTENDED TOPOLOGY.
utt_0036 utt 168.24 171.32 -X ONE MIGHT HOPE THAT A POSSIBLE REMEDY FOR THIS PROBLEM
utt_0037 utt 171.54 173.91 -X WOULD BE TO PRE-PROCESS THE INPUT DRAWING,
utt_0038 utt 173.91 176.34 -X FOR INSTANCE USING A DEEP NETWORK,
utt_0039 utt 176.43 180.31 -X AND THEN FEED THE SIMPLIFIED BITMAP TO A VECTORIZATION METHOD.
utt_0040 utt 181.94 188.69 -X THE PROBLEM IS THAT THE EXISTING SIMPLIFICATION METHODS OFTEN EITHER BREAK THE INTENDED TOPOLOGY,
utt_0041 utt 188.95 191.22 -X OR FAIL TO MERGE SOME OF THE STROKES.
utt_0042 utt 191.79 196.02 -X THESE KINDS OF ARTIFACTS THEN USUALLY CARRY OVER TO THE VECTORIZATION.
utt_0043 utt 199.06 202.36 -X THIS IS WHAT MOTIVATED US TO FORMULATE VECTORIZATION
utt_0044 utt 202.45 205.59 -X AS A SINGLE GLOBAL PARAMETERIZATION PROBLEM,
utt_0045 utt 205.71 208.57 -X RATHER THAN AS A SERIES OF LOCAL PROBLEMS.
utt_0046 utt 209.75 213.75 -X THE INTUITION IS THAT MOST JUNCTIONS IN A TYPICAL DRAWING
utt_0047 utt 213.84 218.68 -X CAN BE WELL EXPLAINED BY LOCALLY COVERING THE SKETCH WITH A DEFORMED GRID.
utt_0048 utt 219.51 227.19 -X THE STRENGTH OF THIS APPROACH IS THAT NEARBY STROKES WITH SIMILAR DIRECTIONS GET SNAPPED TO THE SAME GRID ISOLINE,
utt_0050 utt 227.35 230.81 -X AND THE JUNCTIONS GET SNAPPED TO THE VERTICES OF THE GRID.
utt_0051 utt 231.76 239.03 -X THIS ALLOWS US TO RECONSTRUCT A CLEAN TOPOLOGY, EVEN IN THE PRESENCE OF OVER-SKETCHING.
utt_0052 utt 240.43 243.32 -X TO FORMULATE VECTORIZATION AS PARAMETERIZATION,
utt_0053 utt 243.32 246.10 -X WE TOOK INSPIRATION FROM QUAD MESHING,
utt_0054 utt 246.10 252.47 -X WHERE SEAMLESS GLOBAL PARAMETRIZATIONS ARE USED TO DEFINE A QUAD STRUCTURE OVER AN INPUT SURFACE MESH.
utt_0055 utt 253.36 259.96 -X EVEN THOUGH OUR GOAL IS DIFFERENT, WE USE THE SAME BUILDING BLOCKS WHICH WE ADAPT FOR OUR SPECIFIC PROBLEM.
utt_0056 utt 260.79 265.24 -X IN QUAD MESHING, THE EDGES OF A QUAD MESH ARE OFTEN ALIGNED WITH SHARP FEATURES,
utt_0058 utt 265.24 268.12 -X WHILE WE ALIGN THEM WITH THE INPUT STROKES.
utt_0059 utt 270.61 273.05 -X LET'S NOW HAVE A LOOK AT OUR METHOD.
utt_0060 utt 274.84 281.02 -X OUR METHOD ADOPTS A THREE-STEP PIPELINE THAT IS COMMON IN PARAMETERIZATION-BASED QUAD MESHING.
utt_0061 utt 281.08 289.98 -X STARTING FROM THE INPUT DRAWING, WE FIRST COMPUTE AN ORIENTATION FIELD THAT IS LOCALLY ALIGNED WITH THE TANGENT DIRECTION IN THE SKETCH.
utt_0063 utt 289.98 293.62 -X WE THEN USE THIS FIELD TO COMPUTE A FIELD-ALIGNED PARAMETERIZATION,
utt_0064 utt 293.62 297.82 -X WHOSE ISOLINES CLOSELY FOLLOW THE INPUT STROKES.
utt_0065 utt 297.82 304.06 -X IN THE LAST STEP, WE DEFINE THE TOPOLOGY OF THE DRAWING BY MAPPING THE ISOLINES BACK TO THE SKETCH SPACE.
utt_0066 utt 305.59 312.02 -X BUT OF COURSE, BEFORE WE CAN DO ANY OF THIS, WE FIRST HAVE TO DISCRETIZE THE INPUT DOMAIN.
utt_0067 utt 312.02 315.13 -X AN OBVIOUS CHOICE HERE WOULD BE TO SIMPLY USE THE BLACK PIXELS,
utt_0068 utt 315.19 319.67 -X AND INDEED, THAT'S WHAT'S BEEN DONE FOR INSTANCE BY [BESSMELTSEV AND SOLOMON two thousand and nineteen].
utt_0069 utt 320.50 327.45 -X WE HAVE INSTEAD DECIDED TO WORK ON A TRIANGLE MESH WITH TRIANGLE SIZE PROPORTIONAL TO THE AVERAGE STROKE WIDTH.
utt_0071 utt 328.12 336.79 -X THIS ALLOWS US TO DECOUPLE THE RESOLUTION OF THE DRAWING FROM THE RESOLUTION OF THE DISCRETIZATION.
utt_0072 utt 336.95 339.67 -X SIMILARLY TO [BESSMELTSEV AND SOLOMON two thousand and nineteen],
utt_0073 utt 339.67 342.78 -X WE ONLY DISCRETIZE THE NARROW BAND AROUND THE BLACK PIXELS,
utt_0074 utt 342.93 352.47 -X ALTHOUGH WE LET THE USER TO SPECIFY THE WIDTH OF THIS BAND ACCORDING TO HER DESIRED LEVEL OF SIMPLIFICATION.
utt_0075 utt 352.47 355.99 -X NOW THAT WE HAVE THE MESH, WE CAN COMPUTE THE ORIENTATION FIELD,
utt_0076 utt 355.99 361.27 -X AND FOR THAT WE USE A FRAME FIELD, WHICH LOCALLY DEFINES TWO INDEPENDENT DIRECTIONS.
utt_0077 utt 362.04 365.43 -X WE USE THE POLYVECTOR REPRESENTATION OF [DIAMANTI ET AL. two thousand and fourteen].
utt_0078 utt 366.36 368.86 -X THE FIELD IS DEFINED ON THE VERTICES OF THE MESH.
utt_0079 utt 369.21 374.39 -X WE OPTIMIZE IT USING THE ENERGY FORMULATION OF [BESSMELTSEV AND SOLOMON two thousand and nineteen].
utt_0080 utt 374.39 382.94 -X IN A NUTSHELL, THIS ENERGY HAS THREE COMPONENTS RESPONSIBLE FOR SMOOTHNESS, TANGENT ALIGNMENT AND ORTHOGONAL REGULARIZATION.
utt_0082 utt 384.15 390.23 -X THE REGULARIZATION IS IMPORTANT SINCE IT PREVENTS THE FIELD FROM COLLAPSING INTO A LINE FIELD.
utt_0083 utt 392.53 397.47 -X HOWEVER, WE HAVE FOUND THAT THE UNIFORM REGULARIZATION OF [BESSMELTSEV AND SOLOMON two thousand and nineteen]
utt_0084 utt 397.47 401.56 -X CAN SOMETIMES LEAD TO INCORRECT FIELD TOPOLOGY AROUND Y JUNCTIONS.
utt_0085 utt 402.39 405.80 -X THIS IS AN ISSUE FOR US SINCE OUR PARAMETERIZATION
utt_0086 utt 405.82 408.76 -X CANNOT JUST SPLIT AN ISOLINE IN TWO.
utt_0087 utt 409.94 416.44 -X SO INSTEAD WE DEFINE PER VERTEX WEIGHTS FOR THE REGULARIZATION TERM AND WE INITIALIZE THEM TO zero.
utt_0088 utt 417.14 424.83 -X WE THEN ITERATIVELY INCREASE THESE WEIGHTS IN PARTS OF THE SKETCH WHERE THE FRAME VECTORS ARE CLOSE TO BEING COLLAPSED.
utt_0090 utt 424.83 434.17 -X COMPARED TO UNIFORM WEIGHTS, WE HAVE FOUND THIS STRATEGY TO IMPROVE THE QUALITY OF THE PARAMETERIZATION.
utt_0091 utt 434.17 437.66 -X ONCE WE HAVE THE FRAME FIELD, WE CAN COMPUTE THE PARAMETERIZATION,
utt_0092 utt 437.66 444.70 -X WHICH WE DO BY MINIMIZING AN ENERGY WHILE RESPECTING THE HARD CONSTRAINT THAT THE PARAMETERIZATION IS SEAMLESS.
utt_0094 utt 445.27 449.50 -X LET'S HAVE A LOOK AT WHAT THAT MEANS.
utt_0095 utt 449.50 455.52 -X THE CONSTRAINT THAT F IS SEAMLESS IS NECESSARY SINCE IN ORDER TO COMPUTE A GLOBAL PARAMETERIZATION,
utt_0096 utt 455.52 465.66 -X THE MESH NEEDS TO BE CUT OPEN INTO DISK TOPOLOGY AND WE NEED TO MAKE SURE THAT THE PARAMETERIZATION SATISFIES THE SO CALLED TRANSITION FUNCTIONS AT THE CUTS.
utt_0098 utt 466.58 474.75 -X I WON'T GO IN TOO DEEP ON HOW THIS IS DONE SINCE WE FOLLOW COMMON PRACTICE SO, PLEASE REFER TO THE PAPER IN CASE YOU WANT MORE DETAILS.
utt_0100 utt 478.49 481.60 -X LET'S NOW HAVE A LOOK AT THE ENERGY THAT WE MINIMIZE.
utt_0101 utt 481.60 491.13 -X WHEN COMPUTING THE PARAMETRIZATION, WE HAVE TWO MAIN GOALS AND THESE DIRECTLY TRANSLATE INTO TWO ENERGY TERMS,
utt_0102 utt 491.13 495.13 -X PLUS A SMALL Ltwo REGULARIZATION.
utt_0103 utt 495.13 501.25 -X THE FIRST TERM IS RESPONSIBLE FOR ALIGNING PARAMETRIZATION ISOLINES WITH THE FRAME FIELD,
utt_0104 utt 501.34 503.87 -X AND, BY EXTENSION, WITH THE INPUT STROKES.
utt_0105 utt 505.43 513.12 -X HERE WE USE A STANDARD POISSON TERM WHICH SIMPLY EXPRESSES THE FACT THAT A FRAME SHOULD BE MAPPED TO THE CANONICAL FRAME.
utt_0107 utt 515.83 524.54 -X UNLIKE OTHER VECTORIZATION METHODS, WE PROVIDE A POSSIBILITY FOR THE USER TO CONTROL THE AMOUNT OF SIMPLIFICATION BY SCALING THE GRID.
utt_0109 utt 525.08 528.45 -X YOU CAN SEE HOW THIS WORKS ON THIS SIMPLE TOY EXAMPLE.
utt_0110 utt 528.89 533.53 -X IF THE SCALE IS SET TO five, THE VERTICAL STROKES GET MERGED TOGETHER.
utt_0111 utt 534.43 544.19 -X DECREASING THE SCALE TO one LEADS TO LESS SIMPLIFICATION, WHICH IN THIS CASE MEANS THAT NO STROKES ARE MERGED, AND ALL OF THEM ARE RECONSTRUCTED IN THE OUTPUT.
utt_0113 utt 545.63 552.13 -X ON THE OTHER HAND, IF WE INCREASE THE SCALE TO ten, EVEN THE HORIZONTAL STROKES GET MERGED TOGETHER.
utt_0114 utt 553.85 559.90 -X IN THE DEMONSTRATION THAT I JUST SHOWED, THE SIZE OF THE GRID WAS CONTROLLED GLOBALLY USING THE PARAMETER 𝛾.
utt_0115 utt 560.70 565.70 -X WE ALSO PROVIDE THE POSSIBILITY TO CONTROL THE SCALE LOCALLY USING A MASK,
utt_0116 utt 565.79 572.74 -X AND I WILL SHOW EXAMPLES OF THIS LATER IN THE PRESENTATION.
utt_0117 utt 572.74 575.70 -X THIS WAS THE FIRST TERM IN OUR PARAMETERIZATION ENERGY
utt_0118 utt 576.48 581.86 -X THE SECOND TERM IS RESPONSIBLE FOR SNAPPING THE GRID ISOLINES TO THE INPUT STROKES.
utt_0119 utt 584.38 586.69 -X TO UNDERSTAND HOW WE DO THE SNAPPING,
utt_0120 utt 586.69 593.50 -X LET'S CONSIDER A SINGLE TRIANGLE THAT IS LYING ON AN INPUT STROKE AND HAS A FRAME FROM THE COMPUTED FRAME FIELD.
utt_0121 utt 594.14 599.30 -X WE CAN DETERMINE WHICH FRAME DIRECTION IS THE TANGENT DIRECTION WITH RESPECT TO THE STROKE,
utt_0122 utt 599.42 602.30 -X AND I WILL DESCRIBE HOW WE DO THAT IN A MINUTE.
utt_0123 utt 603.58 605.66 -X LET'S SAY THAT, IT'S THE U DIRECTION.
utt_0124 utt 606.11 612.48 -X THIS MEANS THAT WE WANT THE VERTICES OF THE TRIANGLE TO BE CLOSE TO AN U ISOLINE IN THE PARAMETRIC SPACE,
utt_0125 utt 613.05 617.63 -X AND THEREFORE, THEIR PARAMETRIC V COORDINATES SHOULD BE INTEGERS.
utt_0126 utt 618.72 625.67 -X OF COURSE, ENFORCING THIS AS A HARD CONSTRAINT WOULD CREATE DEGENERATE PARAMETRIC TRIANGLES.
utt_0127 utt 625.67 627.91 -X INSTEAD, WE ADD THIS TERM AS A SOFT PENALTY
utt_0128 utt 627.93 632.87 -X BY INTRODUCING ADDITIONAL INTEGER VARIABLES WHICH REPRESENT THE ISOLINES.
utt_0129 utt 634.62 638.75 -X OF COURSE, THIS WORKS IN VERY MUCH THE SAME WAY IF THE TANGENT DIRECTION IS V,
utt_0130 utt 638.94 643.62 -X IN WHICH CASE WE ADD THE CONSTRAINT FOR U COORDINATES.
utt_0131 utt 643.68 647.07 -X IN PRACTICE, WE DON'T INTRODUCE ONE INTEGER PER TRIANGLE,
utt_0132 utt 647.07 651.04 -X SINCE THAT WOULD SIGNIFICANTLY INCREASE THE COMPUTATIONAL COMPLEXITY.
utt_0133 utt 652.03 657.39 -X INSTEAD WE USE A STRATEGY THAT ALLOWS US TO ELIMINATE MANY OF THE ADDITIONAL INTEGERS
utt_0134 utt 657.39 667.91 -X BY SNAPPING ADJACENT TRIANGLES WITH THE SAME TANGENT DIRECTION TO THE SAME ISOLINE.
utt_0135 utt 668.06 673.70 -X THE REMAINING QUESTION FOR THE SNAPPING IS HOW TO DETERMINE THE TANGENT DIRECTION IN A FRAME.
utt_0136 utt 674.91 683.46 -X THE SOBEL TANGENTS THAT WE USE AS FRAME FIELD ALIGNMENT CONSTRAINTS ARE TOO NOISY FOR DETERMINING THE TANGENT DIRECTION.
utt_0138 utt 683.46 685.79 -X SO INSTEAD WHAT WE DO IS SOMETHING DIFFERENT.
utt_0139 utt 687.55 690.85 -X LET'S HAVE A LOOK AT THIS TRIANGLE HERE FOR INSTANCE.
utt_0140 utt 691.55 697.25 -X STARTING FROM THAT TRIANGLE, WE TRACE THE STREAMLINES IN EACH OF THE TWO FRAME FIELD DIRECTIONS,
utt_0141 utt 697.41 702.53 -X AND WE COUNT THE NUMBER OF BLACK PIXELS ENCOUNTERED BY EACH STREAMLINE.
utt_0142 utt 703.23 706.82 -X THE DIRECTION WITH MORE BLACK PIXELS IS THE TANGENT DIRECTION.
utt_0143 utt 707.14 712.16 -X IN THIS CASE, IT'S THE RED DIRECTION, SO WE ASSIGN A RED LABEL TO THE TRIANGLE.
utt_0144 utt 713.50 718.72 -X SIMILARLY FOR THIS TRIANGLE, AND IN THIS CASE THE TANGENT DIRECTION IS THE BLUE ONE.
utt_0145 utt 721.38 724.10 -X WE THEN REPEAT THIS FOR ALL STROKE TRIANGLES.
utt_0146 utt 724.90 729.80 -X THE BLACK DOTS CORRESPOND TO CASES WHEN THE TWO PIXEL COUNTS ARE VERY CLOSE,
utt_0147 utt 729.86 737.32 -X IN WHICH CASE WE LEAVE THE TRIANGLE UNLABELLED AND WE DON'T USE IT FOR SNAPPING.
utt_0148 utt 737.32 748.32 -X HERE IS AN EXAMPLE OF WHAT THIS LABELLING LOOKS LIKE FOR A COMPLETE SKETCH.
utt_0149 utt 748.32 752.84 -X SO THESE WERE THE TWO MAIN ENERGY TERMS IN OUR PARAMETRIZATION ENERGY.
utt_0150 utt 752.99 758.37 -X WE USE THE WEIGHT twenty-five FOR THE SNAPPING TERM, WHICH WE FOUND TO WORK WELL IN PRACTICE.
utt_0151 utt 759.20 763.11 -X BOTH THE ENERGY AND THE CONSTRAINTS CONTAIN INTEGER VARIABLES,
utt_0152 utt 763.11 766.31 -X AND WE USE COMISO TO SOLVE THIS OPTIMIZATION PROBLEM.
utt_0153 utt 770.21 776.36 -X WHEN THE PARAMETERIZATION IS COMPUTED, THE LAST STEP OF OUR ALGORITHM IS THE EXTRACTION.
utt_0154 utt 776.74 780.20 -X HERE WE ADAPT THE QEX ALGORITHM OF [EBKE ET AL. two thousand and thirteen],
utt_0155 utt 780.77 786.25 -X WHICH MAPS THE GRID ISOLINES BACK TO THE SKETCH SPACE USING THE PARAMETRIZATION INVERSE.
utt_0156 utt 787.04 793.89 -X THE DIFFERENCE WITH RESPECT TO QEX IS THAT WE ARE ONLY INTERESTED IN EXTRACTING THE EDGES AND NOT THE QUADS.
utt_0157 utt 795.04 798.47 -X MOREOVER, WE ONLY TRACE EDGES IN THE TANGENT DIRECTION,
utt_0158 utt 798.47 803.11 -X WHICH WE IDENTIFY USING THE TANGENT LABELS COMPUTED FOR THE SNAPPING TERM.
utt_0159 utt 803.91 809.86 -X THE OUTPUT OF THIS STEP IS A TOPOLOGICAL GRAPH TO WHICH WE FIT A NETWORK OF CUBIC BEZIER CURVES.
utt_0160 utt 813.41 815.97 -X LET'S NOW HAVE A LOOK AT SOME OF OUR RESULTS.
utt_0161 utt 819.43 823.85 -X ON CLEAN INPUT, OUR METHOD PERFORMS SIMILARLY TO PREVIOUS WORK.
utt_0162 utt 824.83 831.30 -X HOWEVER, ON ROUGH INPUT, WE TEND TO PERFORM BETTER THAN EXISTING VECTORIZATION METHODS.
utt_0163 utt 831.30 836.97 -X IN FACT, OUR RESULTS ARE OFTEN ON PAR WITH THE STROKEAGGREGATOR SIMPLIFICATION OF [LIU ET AL. two thousand and eighteen].
utt_0164 utt 838.31 841.10 -X HOWEVER, THEIR METHOD HAS MORE INFORMATION THAN OURS,
utt_0165 utt 841.10 845.77 -X SINCE THEY TAKE VECTOR CURVES AS INPUT, WHEREAS WE TAKE A BITMAP SKETCH.
utt_0166 utt 849.38 851.62 -X AS I ALREADY SAID IN THE BEGINNING,
utt_0167 utt 851.62 860.52 -X WE COULD TRY TO CORRECT THE DRAWBACKS OF PREVIOUS VECTORIZATION METHODS BY FIRST FILTERING THE ROUGH INPUT USING A BITMAP SIMPLIFICATION METHOD.
utt_0169 utt 861.83 867.05 -X INDEED, ON AN INPUT WITH MORE-LESS UNIFORM AMOUNT OF OVER-SKETCHING, SUCH AS THIS ONE HERE,
utt_0170 utt 867.11 869.45 -X THIS OFTEN IMPROVES THE RESULT.
utt_0171 utt 870.31 876.87 -X HOWEVER, NOTICE THAT EVEN HERE THE BITMAP SIMPLIFICATION STRUGGLES TO PRODUCE THE CORRECT TOPOLOGY,
utt_0172 utt 877.03 880.58 -X AND THE RESULTING VECTORIZATION CONTAINS ARTIFACTS.
utt_0173 utt 882.72 889.42 -X THIS IS EVEN MORE EVIDENT ON INPUT WITH VARYING LEVELS OF SKETCHINESS, SUCH AS THIS HOUSE.
utt_0174 utt 889.42 893.74 -X HERE THE BITMAP SIMPLIFICATION METHODS EITHER FAIL TO REPRODUCE ALL DETAILS,
utt_0175 utt 893.76 896.01 -X OR FAIL TO MERGE SOME OF THE STROKES.
utt_0176 utt 896.48 899.34 -X OUR METHOD CAN HANDLE EVEN THIS KIND OF INPUT.
utt_0177 utt 902.21 911.62 -X A STRENGTH OF OUR METHOD IS THAT THE AMOUNT OF SIMPLIFICATION CAN BE CONTROLLED LOCALLY BY CHANGING THE SCALE OF THE PARAMETRIZATION.
utt_0179 utt 911.62 918.03 -X FOR INSTANCE, FOR THIS CAR UNIFORM SCALE IS NOT SUITABLE, BECAUSE THE CAR CONTAINS MULTIPLE LEVELS OF DETAIL.
utt_0180 utt 918.41 921.67 -X WE CAN SEE THAT THE STROKES AROUND THE WINDOW WERE NOT MERGED,
utt_0181 utt 921.83 925.39 -X WHILE A SMALL STROKE AT THE BACK WHEEL WAS MISSED.
utt_0182 utt 927.01 934.60 -X WE CAN INDICATE THIS TO OUR ALGORITHM BY DRAWING A SIMPLE MASK WHERE THE ORANGE COLOR MEANS THAT WE WANT MORE SIMPLIFICATION,
utt_0184 utt 934.60 939.27 -X AND THE PURPLE COLOR MEANS LESS SIMPLIFICATION.
utt_0185 utt 939.33 941.67 -X IF WE NOW RECOMPUTE THE PARAMETERIZATION,
utt_0186 utt 941.70 947.91 -X WE CAN SEE HOW THE GRID SIZE CHANGED IN THESE TWO AREAS, AND THAT THE FINAL RESULT HAS IMPROVED.
utt_0187 utt 951.94 957.42 -X IN TERMS OF TOTAL RUNNING TIME, OUR METHOD IS SIMILAR TO PREVIOUS VECTORIZATION METHODS.
utt_0188 utt 957.80 961.77 -X WE MIGHT TAKE LONGER ON COMPLEX INPUTS, SUCH AS THIS CHURCH,
utt_0189 utt 961.86 966.28 -X BUT WE ARE OFTEN FASTER THAN OTHER METHODS ON SIMPLER SKETCHES WITH FEWER STROKES.
utt_0192 utt 974.15 977.87 -X IT MIGHT BE DIFFICULT TO FIND A SIZE THAT WORKS FOR THE WHOLE DRAWING.
utt_0193 utt 978.15 983.72 -X FOR INSTANCE, IF YOU LOOK AT THIS JUNCTION FOR TWO DIFFERENT PARAMETER PRESETS,
utt_0194 utt 983.72 990.03 -X ONE PRESET WITH A SMALLER BAND AND FINER SCALE, AND ONE WITH A LARGER BAND AND COARSER SCALE.
utt_0196 utt 995.79 1000.11 -X ON THE OTHER HAND, THIS PART OF THE DRAWING HAS MULTIPLE NEARBY STROKES,
utt_0200 utt 1010.31 1015.92 -X IN CONCLUSION, IN THIS WORK, WE DREW A PARALLEL
utt_0205 utt 1033.16 1037.16 -X WE FOCUSED MORE ON THE PARAMETERIZATION AND LESS ON THE FRAME FIELD.
utt_0208 utt 1046.48 1048.30 -X IN ORDER TO IMPROVE AN INTERACTIVE WORKFLOW.
utt_0209 utt 1048.55 1056.94 -X FOR EXAMPLE, LET'S SAY THAT WE RUN OUR ENTIRE METHOD ON THIS CARTOON DUCK AND IT TAKES AROUND thirty-six SECONDS.
utt_0210 utt 1056.94 1063.69 -X THEN, IF WE MODIFY THE MASK, RIGHT NOW WE NEED TO RECOMPUTE THE ENTIRE PARAMETERIZATION, WHICH TAKES AROUND sixteen SECONDS,
utt_0213 utt 1072.94 1077.13 -X THIS WOULD OF COURSE SIGNIFICANTLY DECREASE THE UPDATE TIME.
utt_0214 utt 1078.60 1081.61 -X OUR CODE IS ONLINE, LINK IS IN THE DESCRIPTION,
utt_0215 utt 1083.08 1087.98 -X SO FEEL FREE TO TRY IT OUT AND DON'T HESITATE TO REACH OUT IF YOU HAVE ANY QUESTIONS.
utt_0216 utt 1088.71 1092.01 -6.6066 AND WITH THAT, I THANK YOU VERY MUCH FOR WATCHING.
